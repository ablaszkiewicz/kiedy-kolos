{"version":3,"sources":["components/AddEventPanel.js","components/EditEventPanel.js","actions/index.js","components/EventList.js","components/AdminPanel.js","components/Calendar/CalendarCard.js","components/Calendar/CalendarTools.js","components/Calendar/WeekDays.js","components/API/Api.js","components/Calendar/MonthTitle.js","components/Calendar/Calendar.js","components/RightPanel/EventButton.js","components/RightPanel/EventDescription.js","components/RightPanel/AddButton.js","components/RightPanel/InfoPanel.js","components/Popups/AddEventPopup.js","components/Popups/DeleteEventPopup.js","components/UserPanel.js","App.js","reportWebVitals.js","reducers/chosenDate.js","reducers/chosenGroup.js","reducers/chosenEventAdmin.js","reducers/editModeReducer.js","reducers/addEventPopup.js","reducers/forceEventsRefresh.js","reducers/deleteEventPopup.js","reducers/chosenEvent.js","reducers/index.js","index.js","storage/localStorage.js"],"names":["AddEventPanel","useState","courses","setCourses","groups","setGroups","types","setTypes","courseID","setCourseID","groupID","setGroupID","typeID","setTypeID","date","setDate","time","setTime","description","setDescription","password","setPassword","useEffect","getCourses","getGroups","getTypes","addEvent","a","requestOptions","method","headers","body","JSON","stringify","mode","fetch","response","json","data","id","class","for","name","form","value","onChange","e","target","map","course","group","type","min","max","rows","cols","placeholder","onClick","chosenEvent","useSelector","state","chosenEventAdmin","event","setEvent","getEventInfo","initializeEventInfo","console","log","group_id","type_id","course_id","editEvent","eventID","deleteEvent","payload","setAddEventPopup","setDeleteEventPopup","Event","dispatch","useDispatch","styleText","style","className","group_name","EventList","events","setEvents","getEvents","AdminPanel","editEnabled","EditEventPanel","CalendarCard","cardDate","isInCurrentMonth","chosenDate","div","dayjs","day","format","tabindex","whileHover","y","scale","whileTap","index","Kolokwium","Projekt","Egzamin","Laboratorium","Inne","short_name","toUpperCase","CalendarTools","settingsVisible","SetSettingsVisible","button","Settings","chosenGroup","i","push","li","initial","opacity","animate","exit","transition","stiffness","damping","WeekDays","item","hidden","x","show","calendarDays","variants","ul","staggerChildren","getAllEvents","getDayEvents","URL","MonthTitle","month","swipeDirection","h2","Calendar","days","setDays","setMonth","monthOffset","setMonthOffset","setSwipeDirection","forceRefresh","forceEventsRefresh","daysOfWeek","today","parseInt","initializeMonthDays","filteredData","filter","shouldBeDisplayed","offset","desiredDay","add","daysTemp","Array","startDayOfMonth","startOf","startingDay","subtract","getEventsForDay","eventDay","isDayInCurrentMonth","thisMonth","calendarRowVariants","reduce","r","element","length","rowContent","decreaseMonth","increaseMonth","EventButton","setChosenEventLocal","slice","EventDescription","h3","delay","whiteSpace","AddButton","InfoPanel","setChosenEvent","dayString","dayWithoutZero","AddEventPopup","downloadFormData","coursesTemp","groupsTemp","typesTemp","ease","htmlFor","preventDefault","DeleteEventPopup","chosenEventID","UserPanel","addEventPopupEnabled","addEventPopup","deleteEventPopupEnabled","deleteEventPopup","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","dateReducer","action","groupReducer","chosenEventAdminReducer","editModeReducer","addEventPopupReducer","forceEventsRefreshReducer","deleteEventPopupReducer","chosenEventReducer","allReducers","combineReducers","persistedStore","serializedState","localStorage","getItem","parse","err","loadState","store","createStore","allReducer","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","setItem","saveState","getState","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"8RAwMeA,G,MArMO,WAAO,IAAD,MAKMC,mBAAS,IALf,mBAKjBC,EALiB,KAKRC,EALQ,OAMIF,mBAAS,IANb,mBAMjBG,EANiB,KAMTC,EANS,OAOEJ,mBAAS,IAPX,mBAOjBK,EAPiB,KAOVC,EAPU,OASQN,mBAAS,GATjB,mBASjBO,EATiB,KASPC,EATO,OAUMR,mBAAS,GAVf,mBAUjBS,EAViB,KAURC,EAVQ,OAWIV,mBAAS,GAXb,mBAWjBW,EAXiB,KAWTC,EAXS,OAYAZ,mBAAS,cAZT,mBAYjBa,EAZiB,KAYXC,EAZW,OAaAd,mBAAS,SAbT,mBAajBe,EAbiB,KAaXC,EAbW,OAcchB,mBAAS,IAdvB,mBAcjBiB,EAdiB,KAcJC,EAdI,OAeQlB,mBAAS,IAfjB,mBAejBmB,EAfiB,KAePC,EAfO,KAiBxBC,qBAAU,WACNC,IACAC,IACAC,MACD,IAEH,IAAMC,EAAQ,uCAAG,4BAAAC,EAAA,6DACPC,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACjBzB,SAAUA,EACVE,QAASA,EACTM,KAAMA,EACNF,KAAMA,EACNI,YAAaA,EACbN,OAAQA,EACRQ,SAAUA,IAEdc,KAAM,WAbG,SAeUC,MAAM,6DAA8DP,GAf9E,yDAAH,qDAkBRL,EAAU,uCAAG,8BAAAI,EAAA,sEACQQ,MAzCC,gEAwCT,cACTC,EADS,gBAEIA,EAASC,OAFb,OAETC,EAFS,OAGfnC,EAAWmC,GACX7B,EAAY6B,EAAK,GAAGC,IAJL,2CAAH,qDAOVf,EAAS,uCAAG,8BAAAG,EAAA,sEACSQ,MA/CA,+DA8CT,cACRC,EADQ,gBAEKA,EAASC,OAFd,OAERC,EAFQ,OAGdjC,EAAUiC,GACV3B,EAAW2B,EAAK,GAAGC,IAJL,2CAAH,qDAOTd,EAAQ,uCAAG,8BAAAE,EAAA,sEACUQ,MArDD,8DAoDT,cACPC,EADO,gBAEMA,EAASC,OAFf,OAEPC,EAFO,OAGb/B,EAAS+B,GACTzB,EAAUyB,EAAK,GAAGC,IAJL,2CAAH,qDAmCd,OACI,sBAAKC,MAAM,UAAX,UACI,oBAAIA,MAAM,kBAAV,kCAEA,sBAAKA,MAAM,mBAAX,UACI,uBAAOA,MAAM,iBAAiBC,IAAI,SAAlC,uBAGA,wBAAQC,KAAK,SAASH,GAAG,SAASI,KAAK,YAAYC,MAAOpC,EAAUqC,SApCzD,SAACC,GACpBrC,EAAYqC,EAAEC,OAAOH,QAmCb,SACK1C,EAAQ8C,KAAI,SAACC,GAAD,OACT,wBAAwBL,MAAOK,EAAOV,GAAtC,SACKU,EAAOP,MADCO,EAAOV,YAOhC,sBAAKC,MAAM,mBAAX,UACI,uBAAOA,MAAM,iBAAiBC,IAAI,QAAlC,mBAGA,wBAAQC,KAAK,UAAUH,GAAG,UAAUI,KAAK,YAAYC,MAAOlC,EAASmC,SAzC3D,SAACC,GACnBnC,EAAWmC,EAAEC,OAAOH,QAwCZ,SACKxC,EAAO4C,KAAI,SAACE,GAAD,OACR,wBAAuBN,MAAOM,EAAMX,GAApC,SACKW,EAAMR,MADEQ,EAAMX,YAO/B,sBAAKC,MAAM,mBAAX,UACI,uBAAOA,MAAM,iBAAiBC,IAAI,OAAlC,iBAGA,wBAAQC,KAAK,SAASH,GAAG,SAASI,KAAK,YAAYC,MAAOhC,EAAQiC,SA1CzD,SAACC,GAClBjC,EAAUiC,EAAEC,OAAOH,QAyCX,SACKtC,EAAM0C,KAAI,SAACG,GAAD,OACP,wBAAsBP,MAAOO,EAAKZ,GAAlC,SACKY,EAAKT,MADGS,EAAKZ,YAO9B,sBAAKC,MAAM,mBAAX,UACI,uBAAOA,MAAM,iBAAiBC,IAAI,OAAlC,kBAGA,0BACIU,KAAK,OACLZ,GAAG,OACHG,KAAK,OACLE,MAAM,aACNQ,IAAI,aACJC,IAAI,cANR,sBAOWvC,GAPX,0BAvEO,SAACgC,GAChB/B,EAAQ+B,EAAEC,OAAOH,UAsET,OAYJ,sBAAKJ,MAAM,mBAAX,UACI,uBAAOA,MAAM,iBAAiBC,IAAI,OAAlC,qBAGA,0BACIU,KAAK,OACLZ,GAAG,OACHG,KAAK,OACLU,IAAI,QACJR,MAAM,WACNS,IAAI,SANR,sBAOWrC,GAPX,0BA/EO,SAAC8B,GAChB7B,EAAQ6B,EAAEC,OAAOH,UA8ET,OAYJ,sBAAKJ,MAAM,mBAAX,UACI,uBAAOA,MAAM,iBAAiBC,IAAI,cAAlC,kBAGA,0BACIF,GAAG,cACHG,KAAK,cACLY,KAAK,IACLC,KAAK,KACLC,YAAY,mBACZZ,MAAO1B,EACP2B,SAlGU,SAACC,GACvB3B,EAAe2B,EAAEC,OAAOH,aAqGpB,sBAAKJ,MAAM,0BAAX,UACI,uBACIW,KAAK,WACLZ,GAAG,WACHG,KAAK,WACLc,YAAY,aACZX,SApGO,SAACC,GACpBzB,EAAYyB,EAAEC,OAAOH,UAqGb,wBAAQJ,MAAM,wCAAd,uBACA,wBAAQA,MAAM,iBAAiBiB,QAAS/B,EAAxC,4BCoDD1B,EAhPO,WAAO,IAAD,IAClB0D,EAAcC,aAAY,SAACC,GAAD,OAAWA,EAAMC,oBADzB,EAME5D,mBAAS,IANX,mBAMjB6D,EANiB,KAMVC,EANU,OAQM9D,mBAAS,IARf,mBAQjBC,EARiB,KAQRC,EARQ,OASIF,mBAAS,IATb,mBASjBG,EATiB,KASTC,EATS,OAUEJ,mBAAS,IAVX,mBAUjBK,EAViB,KAUVC,EAVU,OAYQN,mBAAS,GAZjB,mBAYjBO,EAZiB,KAYPC,EAZO,OAaMR,mBAAS,GAbf,mBAajBS,EAbiB,KAaRC,EAbQ,OAcIV,mBAAS,GAdb,mBAcjBW,EAdiB,KAcTC,EAdS,OAeAZ,mBAAS,cAfT,mBAejBa,EAfiB,KAeXC,EAfW,OAgBAd,mBAAS,SAhBT,mBAgBjBe,EAhBiB,KAgBXC,EAhBW,OAiBchB,mBAAS,IAjBvB,mBAiBjBiB,EAjBiB,KAiBJC,EAjBI,OAkBQlB,mBAAS,IAlBjB,mBAkBjBmB,EAlBiB,KAkBPC,EAlBO,KAoBxBC,qBAAU,WACNC,KACAC,KACAC,OACD,IAEHH,qBAAU,WACN0C,OACD,CAACN,IAEJpC,qBAAU,WACN2C,OACD,CAACH,IAEJ,IAAMG,GAAsB,WACxBC,QAAQC,IAAI,uBACZhD,EAAe2C,EAAM5C,aACrBH,EAAQ+C,EAAMhD,MACdG,EAAQ6C,EAAM9C,MACdL,EAAWmD,EAAMM,UACjBvD,EAAUiD,EAAMO,SAChB5D,EAAYqD,EAAMQ,YAGhBC,GAAS,uCAAG,4BAAA5C,EAAA,6DACRC,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACjBuC,QAASd,EACTlD,SAAUA,EACVE,QAASA,EACTM,KAAMA,EACNF,KAAMA,EACNI,YAAaA,EACbN,OAAQA,EACRQ,SAAUA,IAEdc,KAAM,WAdI,SAgBSC,MAAM,8DAA+DP,GAhB9E,yDAAH,qDAmBT6C,GAAW,uCAAG,4BAAA9C,EAAA,6DACVC,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEuC,QAASd,EAAatC,SAAUA,IACvDc,KAAM,WALM,SAOOC,MAAM,gEAAiEP,GAP9E,yDAAH,qDAUXL,GAAU,uCAAG,8BAAAI,EAAA,sEACQQ,MAxEC,gEAuET,cACTC,EADS,gBAEIA,EAASC,OAFb,OAETC,EAFS,OAGfnC,EAAWmC,GACX7B,EAAY6B,EAAK,GAAGC,IAJL,2CAAH,qDAOVf,GAAS,uCAAG,8BAAAG,EAAA,sEACSQ,MA9EA,+DA6ET,cACRC,EADQ,gBAEKA,EAASC,OAFd,OAERC,EAFQ,OAGdjC,EAAUiC,GACV3B,EAAW2B,EAAK,GAAGC,IAJL,2CAAH,qDAOTd,GAAQ,uCAAG,8BAAAE,EAAA,sEACUQ,MApFD,8DAmFT,cACPC,EADO,gBAEMA,EAASC,OAFf,OAEPC,EAFO,OAGb/B,EAAS+B,GACTzB,EAAUyB,EAAK,GAAGC,IAJL,2CAAH,qDAORyB,GAAY,uCAAG,8BAAArC,EAAA,sEACMQ,MAAM,yEAAD,OACiDuB,IAF5D,cACXtB,EADW,gBAIEA,EAASC,OAJX,OAIXC,EAJW,OAKjByB,EAASzB,EAAK,IACd4B,QAAQC,IAAI7B,EAAK,IANA,2CAAH,qDAqClB,OACI,sBAAKE,MAAM,UAAX,UACI,qBAAIA,MAAM,kBAAV,+BAA+CsB,EAAMvB,MAErD,sBAAKC,MAAM,mBAAX,UACI,uBAAOA,MAAM,iBAAiBC,IAAI,SAAlC,uBAGA,wBAAQC,KAAK,SAASH,GAAG,SAASI,KAAK,YAAYC,MAAOpC,EAAUqC,SApCzD,SAACC,GACpBrC,EAAYqC,EAAEC,OAAOH,QAmCb,SACK1C,EAAQ8C,KAAI,SAACC,GAAD,OACT,wBAAwBL,MAAOK,EAAOV,GAAtC,SACKU,EAAOP,MADCO,EAAOV,YAOhC,sBAAKC,MAAM,mBAAX,UACI,uBAAOA,MAAM,iBAAiBC,IAAI,QAAlC,mBAGA,wBAAQC,KAAK,UAAUH,GAAG,UAAUI,KAAK,YAAYC,MAAOlC,EAASmC,SAzC3D,SAACC,GACnBnC,EAAWmC,EAAEC,OAAOH,QAwCZ,SACKxC,EAAO4C,KAAI,SAACE,GAAD,OACR,wBAAuBN,MAAOM,EAAMX,GAApC,SACKW,EAAMR,MADEQ,EAAMX,YAO/B,sBAAKC,MAAM,mBAAX,UACI,uBAAOA,MAAM,iBAAiBC,IAAI,OAAlC,iBAGA,wBAAQC,KAAK,SAASH,GAAG,SAASI,KAAK,YAAYC,MAAOhC,EAAQiC,SA1CzD,SAACC,GAClBjC,EAAUiC,EAAEC,OAAOH,QAyCX,SACKtC,EAAM0C,KAAI,SAACG,GAAD,OACP,wBAAsBP,MAAOO,EAAKZ,GAAlC,SACKY,EAAKT,MADGS,EAAKZ,YAO9B,sBAAKC,MAAM,mBAAX,UACI,uBAAOA,MAAM,iBAAiBC,IAAI,OAAlC,kBAGA,0BACIU,KAAK,OACLZ,GAAG,OACHG,KAAK,OACLE,MAAM,aACNQ,IAAI,aACJC,IAAI,cANR,sBAOWvC,GAPX,0BAvEO,SAACgC,GAChB/B,EAAQ+B,EAAEC,OAAOH,UAsET,OAYJ,sBAAKJ,MAAM,mBAAX,UACI,uBAAOA,MAAM,iBAAiBC,IAAI,OAAlC,qBAGA,0BACIU,KAAK,OACLZ,GAAG,OACHG,KAAK,OACLU,IAAI,QACJR,MAAM,WACNS,IAAI,SANR,sBAOWrC,GAPX,0BA/EO,SAAC8B,GAChB7B,EAAQ6B,EAAEC,OAAOH,UA8ET,OAYJ,sBAAKJ,MAAM,mBAAX,UACI,uBAAOA,MAAM,iBAAiBC,IAAI,cAAlC,kBAGA,0BACIF,GAAG,cACHG,KAAK,cACLY,KAAK,IACLC,KAAK,KACLC,YAAY,mBACZZ,MAAO1B,EACP2B,SAlGU,SAACC,GACvB3B,EAAe2B,EAAEC,OAAOH,aAqGpB,sBAAKJ,MAAM,0BAAX,UACI,uBACIW,KAAK,WACLZ,GAAG,WACHG,KAAK,WACLc,YAAY,aACZX,SApGO,SAACC,GACpBzB,EAAYyB,EAAEC,OAAOH,UAqGb,wBAAQJ,MAAM,wCAAwCiB,QAASgB,GAA/D,uBAGA,wBAAQjC,MAAM,iBAAiBiB,QAASc,GAAxC,2BC5OHxD,EAAU,SAAC6B,GACpB,MAAO,CACHO,KAAM,WACNuB,QAAS9B,IA8BJ+B,EAAmB,SAAC/B,GAC7B,MAAO,CACHO,KAAM,sBACNuB,QAAS9B,IAWJgC,EAAsB,SAAChC,GAChC,MAAO,CACHO,KAAM,yBACNuB,QAAS9B,ICPXiC,EAAQ,SAAC,GAAe,IAAbf,EAAY,EAAZA,MACPgB,EAAWC,cA2BjB,OACI,qBAAIvC,MAAO,oBA1BD,WACV,IAAIwC,EAAY,GAgBhB,MAfkB,aAAdlB,EAAMX,KACN6B,GAAa,2BACQ,WAAdlB,EAAMX,KACb6B,GAAa,8BACQ,WAAdlB,EAAMX,KACb6B,GAAa,2BACQ,gBAAdlB,EAAMX,KACb6B,GAAa,0BACQ,QAAdlB,EAAMX,OACb6B,GAAa,6BAMVA,EAS0BC,GAASxB,QAAS,kBALnDqB,EDpDG,CACH3B,KAAM,YACNuB,QCkD6BZ,EAAMvB,UACnCuC,ED9CG,CACH3B,KAAM,iBCiDN,UACI,oBAAI+B,UAAU,yBAAd,SAAwCpB,EAAMpB,OAC9C,sBAAKF,MAAM,yBAAX,UACI,qBAAKA,MAAM,wBAAX,mBACA,qBAAKA,MAAM,wBAAX,SAAoCsB,EAAMX,OAC1C,qBAAKX,MAAM,wBAAX,SAAoCsB,EAAMhD,OAC1C,qBAAK0B,MAAM,wBAAX,SAAoCsB,EAAMqB,oBAM3CC,EA/EG,WACd,IADoB,EAEQnF,mBAAS,IAFjB,mBAEboF,EAFa,KAELC,EAFK,KAGdR,EAAWC,cAEjBzD,qBAAU,WACNiE,MACD,IAEH,IAAMA,EAAS,uCAAG,8BAAA5D,EAAA,sEACSQ,MATd,+DAQK,cACRC,EADQ,gBAEKA,EAASC,OAFd,OAERC,EAFQ,OAGdgD,EAAUhD,GACV4B,QAAQC,IAAI7B,GAJE,2CAAH,qDAWf,OACI,qBAAKE,MAAM,YAAX,SACI,sBAAKA,MAAM,oBAAX,UACI,oBAAIA,MAAM,iBAAV,wBACA,qBAAIA,MAAM,cAAV,UACI,qBAAIA,MAAM,uCAAuCiB,QAAS,WARtEqB,EDMG,CACH3B,KAAM,kBCCM,UACI,mBAAGX,MAAM,uBACT,qDAEH6C,EAAOrC,KAAI,SAACc,GAAD,OACR,cAAC,EAAD,CAAOA,MAAOA,gBCfvB0B,EAbI,WACf,IAAMC,EAAc9B,aAAY,SAACC,GAAD,OAAWA,EAAM6B,eACjD,OACI,qBAAKP,UAAU,YAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,cAAC,EAAD,IAECO,EAAc,cAACC,EAAD,IAAqB,cAAC,EAAD,U,uBC0CrCC,EAlDM,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,iBAAkBR,EAAa,EAAbA,OAC1CP,EAAWC,cACXe,EAAanC,aAAY,SAACC,GAAD,OAAWA,EAAMkC,cA4BhD,OACI,eAAC,IAAOC,IAAR,CACIb,UAAW,OAxBL,WACV,IAAIF,EAAY,GAEhB,OAAKa,GAIDD,IAAaE,IACbd,GAAa,kBAGa,IAA1BgB,IAAMJ,GAAUK,OAAyC,IAA1BD,IAAMJ,GAAUK,QAC/CjB,GAAa,iBAGbgB,IAAMJ,GAAUM,OAAO,gBAAkBF,MAAQE,OAAO,gBACxDlB,GAAa,iBAGVA,GAfI,iBAoBaC,GACpBkB,SAAS,IACT1C,QA9BuB,WAC3BqB,EAAS/D,EAAQ6E,KA8BbQ,WAAY,CAAEC,GAAI,EAAGC,MAAO,MAC5BC,SAAU,CAAEF,EAAG,EAAGC,MAAO,KAL7B,UAOI,qBAAKpB,UAAU,cAAf,SACI,oBAAIA,UAAU,mBAAd,SACKG,EAAOrC,KAAI,SAACc,EAAO0C,GAAR,OACR,cAAC,EAAD,CAAmB1C,MAAOA,GAAd0C,UAIxB,qBAAKtB,UAAU,cAAf,SAA8Bc,IAAMJ,GAAUM,OAAO,YAO3DrB,EAAQ,SAAC,GAAe,IAAbf,EAAY,EAAZA,MASb,OACI,oBAAIoB,UAAW,cATJ,CACXuB,UAAW,mBACXC,QAAS,sBACTC,QAAS,mBACTC,aAAc,kBACdC,KAAM,qBAIgC/C,EAAMX,MAA5C,SACKW,EAAMgD,WAAWC,eADkCjD,EAAMvB,KCxCvDyE,EAvBO,WAAO,IAAD,EACsB/G,oBAAS,GAD/B,mBACjBgH,EADiB,KACAC,EADA,KAOxB,OACI,sBAAKhC,UAAU,oBAAf,UACI,wBAAQA,UAAU,+BAAlB,SACI,qBAAKA,UAAU,kBAAf,iBAEJ,cAAC,IAAOiC,OAAR,CACIjC,UAAU,0BACVzB,QAXU,WAClByD,GAAoBD,IAWZV,SAAU,CAAED,MAAO,IACnBF,WAAY,CAAEE,MAAO,OAEzB,cAAC,IAAD,UAAkBW,GAAmB,cAAC,EAAD,UAO3CG,EAAW,WAab,IAZA,IAAMtC,EAAWC,cACXsC,EAAc1D,aAAY,SAACC,GAAD,OAAWA,EAAMyD,eAM3CpC,EAAQ,SAACvC,GACX,GAAIA,IAAS2E,EAAa,MAAO,8CAG/BjH,EAAS,GAZI,WAaVkH,GACLlH,EAAOmH,KACH,cAAC,IAAOC,GAAR,CAEItC,UAAW,4BAA8BD,EAAM,SAAD,OAAUqC,IACxDf,SAAU,CAAED,MAAO,GAAKD,EAAG,GAC3BD,WAAY,CAAEE,MAAO,IAAKD,GAAI,GAC9B5C,QAAS,kBAhBGf,EAgBkB,SAAD,OAAU4E,QAf/CxC,EJ3BG,CACH3B,KAAM,YACNuB,QIyBkBhC,IADC,IAACA,GAWhB,SAOK4E,GANIA,KAHRA,EAAI,EAAGA,EAAI,EAAGA,IAAM,EAApBA,GAcT,OACI,eAAC,IAAOvB,IAAR,CACIb,UAAU,qBACVuC,QAAS,CAAEC,QAAS,EAAGrB,GAAI,IAAKC,MAAO,GACvCqB,QAAS,CAAED,QAAS,EAAGrB,EAAG,EAAGC,MAAO,GACpCsB,KAAM,CAAEF,QAAS,EAAGrB,GAAI,IAAKC,MAAO,GACpCuB,WAAY,CAAE1E,KAAM,SAAU2E,UAAW,IAAKC,QAAS,IAL3D,UAOI,sBAAK7C,UAAU,oBAAf,UACI,oBAAIA,UAAU,yBAAd,mBACA,oBAAIA,UAAU,yBAAd,SAAwC9E,OAE5C,sBAAK8E,UAAU,oBAAf,UACI,oBAAIA,UAAU,yBAAd,mBACA,qBAAIA,UAAU,yBAAd,UACI,qBAAKA,UAAU,4DACf,qBAAKA,UAAU,0GCvCpB8C,EAhCE,WACb,IASMC,EAAO,CACTC,OAAQ,CAAER,QAAS,EAAGS,GAAI,IAC1BC,KAAM,CAAEV,QAAS,EAAGS,EAAG,IAGrBE,EAAe,CAAC,OAAQ,MAAO,WAAO,OAAQ,MAAO,MAAO,QAAQrF,KAAI,SAACiD,GAC3E,OACI,cAAC,IAAOuB,GAAR,CAAqBtC,UAAU,uBAAuBoD,SAAUL,EAAhE,SACKhC,GADWA,MAMxB,OACI,qBAAKf,UAAU,kBAAf,SACI,cAAC,IAAOqD,GAAR,CAAWrD,UAAU,uBAAuBoD,SAxBlC,CACdJ,OAAQ,CAAER,QAAS,GACnBU,KAAM,CACFV,QAAS,EACTG,WAAY,CACRW,gBAAiB,OAmB4Cf,QAAQ,SAASE,QAAQ,OAA1F,SACKU,OC5BJI,EAAY,uCAAG,WAAOlG,GAAP,iBAAAZ,EAAA,mIAGDQ,MAHC,6EAGlBC,EAHkB,gBAILA,EAASC,OAJJ,cAIlBC,EAJkB,yBAMjBA,GANiB,2CAAH,sDASZoG,EAAY,uCAAG,WAAOnG,EAAIzB,GAAX,mBAAAa,EAAA,6DAClBgH,EADkB,mFACgE7H,GADhE,SAGDqB,MAAMwG,GAHL,cAGlBvG,EAHkB,gBAILA,EAASC,OAJJ,cAIlBC,EAJkB,yBAMjBA,GANiB,2CAAH,wDASZd,EAAS,uCAAG,WAAOe,GAAP,iBAAAZ,EAAA,mIAGEQ,MAHF,6EAGfC,EAHe,gBAIFA,EAASC,OAJP,cAIfC,EAJe,yBAMdA,GANc,2CAAH,sDASTf,EAAU,uCAAG,WAAOgB,GAAP,iBAAAZ,EAAA,oIAGCQ,MAHD,8EAGhBC,EAHgB,gBAIHA,EAASC,OAJN,cAIhBC,EAJgB,yBAMfA,GANe,2CAAH,sDASVb,EAAQ,uCAAG,WAAOc,GAAP,iBAAAZ,EAAA,kIAGGQ,MAHH,4EAGdC,EAHc,gBAIDA,EAASC,OAJR,cAIdC,EAJc,yBAMbA,GANa,2CAAH,sDCLNsG,EA7BI,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,eAgBzB,OACI,cAAC,IAAOC,GAAR,CAEI7D,UAAU,kBACVuC,QAAS,CAAEU,EAAoB,GAAjBW,GACdnB,QAAS,CAAEQ,EAAG,GACdN,WAAY,CAAE1E,KAAM,SAAU2E,UAAW,IAAKC,QAAS,IAL3D,SAhBgB,CAChB,eACA,OACA,SACA,gBACA,MACA,WACA,SACA,gBACA,gBACA,mBACA,WACA,iBAWiBc,EAAQ,IANhBA,IC0HFG,EAlIE,WAAO,IAAD,EACS/I,mBAAS,IADlB,mBACZoF,EADY,KACJC,EADI,OAEKrF,mBAAS,IAFd,mBAEZgJ,EAFY,KAENC,EAFM,OAGOjJ,qBAHP,mBAGZ4I,EAHY,KAGLM,EAHK,OAImBlJ,mBAAS,GAJ5B,mBAIZmJ,EAJY,KAICC,EAJD,OAKyBpJ,mBAAS,GALlC,mBAKZ6I,EALY,KAKIQ,EALJ,KAObxE,EAAWC,cACXsC,EAAc1D,aAAY,SAACC,GAAD,OAAWA,EAAMyD,eAC3CkC,EAAe5F,aAAY,SAACC,GAAD,OAAWA,EAAM4F,sBAE5CC,EAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAElCC,EAAQ1D,MAEZ1E,qBAAU,WACN6H,EAASQ,SAASD,EAAMxD,OAAO,QAC/BpB,EAAS/D,EAAQ2I,EAAMxD,OAAO,gBAE9B0D,EAAoB,GACpBrE,MACD,IAEHjE,qBAAU,WACNiE,MACD,CAAC8B,EAAakC,IAEjB,IAAMhE,EAAS,uCAAG,8BAAA5D,EAAA,sEACK8G,IADL,OACRnG,EADQ,OAERuH,EAAevH,EAAKwH,OAAOC,GACjCzE,EAAUuE,GAHI,2CAAH,qDAsBTE,EAAoB,SAACjG,GACvB,MAA4B,cAArBA,EAAMqB,YAA8BrB,EAAMqB,aAAekC,GAG9DuC,EAAsB,SAACI,GAOzB,IANA,IAAMC,EAAaP,EAAMQ,IAAIF,EAAQ,SAC/BG,EAAW,IAAIC,MAAM,IACrBC,EAAkBZ,EAAWQ,EAAWK,QAAQ,SAASrE,OAEzDsE,EAAcN,EAAWK,QAAQ,SAASE,SAASH,EAAkB,EAAG,OAErE/C,EAAI,EAAGA,EAAI,GAAIA,IAAK6C,EAAS7C,GAAKiD,EAAYL,IAAI5C,EAAG,OAAOpB,OAAO,cAE5EgD,EAAQiB,IAGNM,EAAkB,SAACxE,GACrB,OAAOZ,EAAOyE,QAAO,SAACY,GAAD,OAAcA,EAAS5J,OAASmF,MAGnD0E,EAAsB,SAAC1E,GACzB,IAAM2E,EAAYlB,EAAMQ,IAAId,EAAa,SACzC,OAAOpD,IAAMC,GAAKC,OAAO,QAAU0E,EAAU1E,OAAO,OAGlD2E,EAAsB,CACxB3C,OAAQ,CAAER,QAAS,EAAGS,EAAoB,IAAjBW,GACzBV,KAAM,CACFV,QAAS,EACTS,EAAG,EACHN,WAAY,CACR1E,KAAM,SACN2E,UAAW,IACXC,QAAS,MAKjBzE,EAAO2F,EACNjG,KAAI,SAACiD,GAAD,OACD,cAAC,EAAD,CAEIJ,iBAAkB8E,EAAoB1E,GACtCL,SAAUK,EACVZ,OAAQoF,EAAgBxE,GACxB6C,eAAgBA,GAJX7C,MAOZ6E,QAAO,SAACC,EAAGC,EAASxE,GAGjB,OAFAA,EAAQ,IAAM,GAAKuE,EAAExD,KAAK,IAC1BwD,EAAEA,EAAEE,OAAS,GAAG1D,KAAKyD,GACdD,IACR,IACF/H,KAAI,SAACkI,EAAY1E,GAAb,OACD,qBAAyBtB,UAAU,gBAAnC,SACKgG,GADKrC,EAAQrC,MAK1B,OACI,sBAAKtB,UAAU,WAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,wBAAQA,UAAU,0BAA0BzB,QAAS,kBAtE3C,WAClB6F,GAAmB,GACnB,IAAMU,EAASZ,EAAc,EAC7BC,EAAeW,GACfb,EAASQ,SAASD,EAAMQ,IAAIF,EAAQ,SAAS9D,OAAO,QACpD0D,EAAoBI,GAiE+CmB,MAC3D,cAAC,EAAD,CAAYtC,MAAOA,EAAOC,eAAgBA,IAC1C,wBAAQ5D,UAAU,sBAAsBzB,QAAS,kBAhFvC,WAClB6F,EAAkB,GAClB,IAAMU,EAASZ,EAAc,EAC7BC,EAAeW,GACfb,EAASQ,SAASD,EAAMQ,IAAIF,EAAQ,SAAS9D,OAAO,QACpD0D,EAAoBI,GA2E2CoB,SAE3D,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,IAAOrF,IAAR,CACIb,UAAU,iBAEVuC,QAAQ,SACRE,QAAQ,OACRW,SAAUuC,EALd,SAOKvH,GALIuF,OCxENwC,EAvDK,SAAC,GAAiD,IAA/CvH,EAA8C,EAA9CA,MAAOwH,EAAuC,EAAvCA,oBAAqB5H,EAAkB,EAAlBA,YACzCoB,EAAWC,cAiCjB,OACI,eAAC,IAAOyC,GAAR,CAEItC,UAAW,mBAvBL,WACV,IAAIF,EAAY,IAWhB,OAHAA,GAPe,CACXyB,UAAW,yBACXC,QAAS,4BACTC,QAAS,yBACTC,aAAc,wBACdC,KAAM,2BAEU/C,EAAMX,MACtBW,IAAUJ,IAAasB,GAAa,gCAEjCA,EAW6BC,GAChCqD,SApCK,CACTJ,OAAQ,CAAER,QAAS,EAAGS,EAAG,KACzBC,KAAM,CACFV,QAAS,EACTS,EAAG,EACHN,WAAY,CACR1E,KAAM,SACN2E,UAAW,IACXC,QAAS,MA6BbxB,SAAU,CAAED,MAAO,KACnBF,WAAY,CAAEC,GAAI,EAAGC,MAAO,MAC5B7C,QAAS,kBAAM6H,EAAoBxH,IANvC,UAQI,oBAAIoB,UAAU,yBAAd,SAAwCpB,EAAMpB,OAC9C,sBAAKwC,UAAU,yBAAf,UACI,qBAAKA,UAAU,wBAAf,SAAwCpB,EAAM9C,KAAKuK,MAAM,EAAG,KAC5D,qBAAKrG,UAAU,wBAAf,SAAwCpB,EAAMX,OAC9C,qBAAK+B,UAAU,wBAAf,SACI,wBAAQzB,QAnBG,WACvBqB,EAASF,GAAoB,IAC7BE,ET0BG,CACH3B,KAAM,mBACNuB,QS5BwBZ,EAAMvB,MAiBlB,yBAZHuB,EAAMvB,KCIRiJ,EA1CU,SAAC,GAAe,IAAb1H,EAAY,EAAZA,MAcxB,OACI,qBAAKoB,UAAU,YAAf,SACKpB,GACG,gCACI,cAAC,IAAO2H,GAAR,CACIvG,UAAU,mBACVuC,QAAS,CAAEpB,EAAG,GAAIqB,QAAS,GAC3BC,QAAS,CAAEtB,EAAG,EAAGqB,QAAS,GAC1BG,WArBI,CACpB1E,KAAM,SACN2E,UAAW,IACXC,QAAS,GACT2D,MAAO,GAaK,SAMK5H,EAAMpB,OAEX,cAAC,IAAO6F,GAAR,CAAWrD,UAAU,eACrB,cAAC,IAAOa,IAAR,CACIb,UAAU,iBACVD,MAAO,CAAE0G,WAAY,YACrBlE,QAAS,CAAEpB,EAAG,GAAIqB,QAAS,GAC3BC,QAAS,CAAEtB,EAAG,EAAGqB,QAAS,GAC1BG,WAxBU,CAC1B1E,KAAM,SACN2E,UAAW,IACXC,QAAS,GACT2D,MAAO,IAeK,SAOK5H,EAAM5C,gBAjBL4C,EAAMvB,OCDjBqJ,EAfG,WACd,IAAM9G,EAAWC,cAKjB,OACI,oBAAIG,UAAU,0BAAd,SACI,wBAAQA,UAAU,oBAAoBzB,QANpB,WACtBqB,EAASH,GAAiB,KAKtB,iCCkFGkH,EAnFG,WAAO,IAAD,EACQ5L,mBAAS,IADjB,mBACboF,EADa,KACLC,EADK,OAEkBrF,qBAFlB,mBAEbyD,EAFa,KAEAoI,EAFA,KAGdhL,EAAO6C,aAAY,SAACC,GAAD,OAAWA,EAAMkC,cACpCuB,EAAc1D,aAAY,SAACC,GAAD,OAAWA,EAAMyD,eAC3CkC,EAAe5F,aAAY,SAACC,GAAD,OAAWA,EAAM4F,sBAgBlDlI,oBAAS,sBAAC,sBAAAK,EAAA,sDACN2D,EAAU,IACVC,IAFM,2CAGP,CAACzE,EAAMuG,EAAakC,IAEvB,IAAMhE,EAAS,uCAAG,8BAAA5D,EAAA,sEACK+G,EAAa,EAAG5H,GADrB,OACRwB,EADQ,OAERuH,EAAevH,EAAKwH,OAAOC,GACjCzE,EAAUuE,GACViC,EAAejC,EAAa,IAJd,2CAAH,qDAOTE,EAAoB,SAACjG,GACvB,MAA2B,aAApBA,EAAMqB,YAA6BrB,EAAMqB,YAAckC,GAqBlE,OACI,sBAAKnC,UAAU,YAAf,UACI,eAAC,IAAOa,IAAR,CAAYb,UAAU,oBAAtB,UACI,qBAAIA,UAAU,oBAAd,wBArBW,WACnB,IAAI6G,EAAY/F,IAAMlF,GAAMoF,OAAO,MAInC,MAHoB,KAAhB6F,EAAU,KACVA,EAAYA,EAAUR,MAAM,EAAG,IAE5BQ,EAiBiBC,GADhB,IApDO,CACf,WACA,SACA,QACA,WACA,OACA,UACA,QACA,WACA,aACA,oBACA,YACA,WAyCsDrC,SAAS3D,IAAMlF,GAAMoF,OAAO,OAAS,MAEnF,cAAC,EAAD,IACA,cAAC,IAAOqC,GAAR,CACIrD,UAAU,yBACVoD,SAnBU,CACtBJ,OAAQ,CAAER,QAAS,GACnBU,KAAM,CACFV,QAAS,EACTG,WAAY,CACRW,gBAAiB,OAebf,QAAQ,SACRE,QAAStC,EAAO4F,OAAS,GAAK,OAJlC,SAMK5F,EAAOrC,KAAI,SAACc,GAAD,OACR,cAAC,EAAD,CAEIA,MAAOA,EACPwH,oBAAqBQ,EACrBpI,YAAaA,GAHRI,EAAMvB,YAQ3B,cAAC,EAAD,CAAkBuB,MAAOJ,QCsHtBuI,EAvMO,WAAO,IAAD,EAClBnL,EAAO6C,aAAY,SAACC,GAAD,OAAWA,EAAMkC,cACpChB,EAAWC,cAFO,EAIM9E,mBAAS,IAJf,mBAIjBC,EAJiB,KAIRC,EAJQ,OAKIF,mBAAS,IALb,mBAKjBG,EALiB,KAKTC,EALS,OAMEJ,mBAAS,IANX,mBAMjBK,EANiB,KAMVC,EANU,OAQQN,mBAAS,GARjB,mBAQjBO,EARiB,KAQPC,EARO,OASMR,mBAAS,GATf,mBASjBS,EATiB,KASRC,EATQ,OAUIV,mBAAS,GAVb,mBAUjBW,EAViB,KAUTC,EAVS,OAWAZ,mBAAS,SAXT,mBAWjBe,EAXiB,KAWXC,EAXW,OAYchB,mBAAS,IAZvB,mBAYjBiB,EAZiB,KAYJC,EAZI,OAaQlB,mBAAS,IAbjB,mBAajBmB,EAbiB,KAaPC,EAbO,KAexBC,oBAAS,sBAAC,sBAAAK,EAAA,sDACNuK,IADM,2CAEP,IAEH,IAAMA,EAAgB,uCAAG,gCAAAvK,EAAA,sEACKJ,EAAW,GADhB,cACf4K,EADe,OAErBhM,EAAWgM,GACX1L,EAAY0L,EAAY,GAAG5J,IAHN,SAKIf,EAAU,GALd,cAKf4K,EALe,OAMrB/L,EAAU+L,GACVzL,EAAWyL,EAAW,GAAG7J,IAPJ,UASGd,EAAS,GATZ,QASf4K,EATe,OAUrB9L,EAAS8L,GACTxL,EAAUwL,EAAU,GAAG9J,IAXF,4CAAH,qDAchBb,EAAQ,uCAAG,4BAAAC,EAAA,6DACbuC,QAAQC,IAAI,6BACNvC,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACjBzB,SAAUA,EACVE,QAASA,EACTM,KAAMA,EACNF,KAAMA,EACNI,YAAaA,EACbN,OAAQA,EACRQ,SAAUA,IAEdc,KAAM,WAdG,SAgBUC,MAAM,6DAA8DP,GAhB9E,gBAkBTkD,EAASH,GAAiB,IAC1BG,EbJD,CACH3B,KAAM,aahBO,2CAAH,qDA6Dd,OACI,cAAC,IAAO4C,IAAR,CACIb,UAAU,QACVuC,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,KAAM,CAAEF,QAAS,GACjBG,WAAY,CAAEyE,KAAM,CAAC,IAAM,IAAM,IAAM,MAL3C,SAOI,eAAC,IAAOvG,IAAR,CACIb,UAAU,cACVuC,QAAS,CAAEnB,MAAO,GAAKoB,QAAS,GAChCC,QAAS,CAAErB,MAAO,EAAGoB,QAAS,GAC9BE,KAAM,CAAEtB,MAAO,GAAKoB,QAAS,GAC7BG,WAAY,CAAEyE,KAAM,CAAC,IAAM,IAAM,IAAM,MAL3C,UAOI,qBAAIpH,UAAU,qBAAd,kCAAyDc,IAAMlF,GAAMoF,OAAO,iBAC5E,uBAAMhB,UAAU,oBAAhB,UACI,uBAAOA,UAAU,qBAAqBqH,QAAQ,UAA9C,uBAGA,wBAAQrH,UAAU,qBAAqB3C,GAAG,UAAUK,MAAOpC,EAAUqC,SAtD9D,SAACC,GACpBrC,EAAYqC,EAAEC,OAAOH,QAqDT,SACK1C,EAAQ8C,KAAI,SAACC,GAAD,OACT,wBAAwBL,MAAOK,EAAOV,GAAtC,SACKU,EAAOP,MADCO,EAAOV,SAM5B,uBAAO2C,UAAU,qBAAqBqH,QAAQ,QAA9C,mBAGA,wBAAQrH,UAAU,qBAAqB3C,GAAG,QAAQK,MAAOlC,EAASmC,SA7D5D,SAACC,GACnBnC,EAAWmC,EAAEC,OAAOH,QA4DR,SACKxC,EAAO4C,KAAI,SAACE,GAAD,OACR,wBAAuBN,MAAOM,EAAMX,GAApC,SACKW,EAAMR,MADEQ,EAAMX,SAM3B,uBAAO2C,UAAU,qBAAqBqH,QAAQ,OAA9C,iBAGA,wBAAQrH,UAAU,qBAAqB3C,GAAG,OAAOK,MAAOhC,EAAQiC,SA5D3D,SAACC,GAClBjC,EAAUiC,EAAEC,OAAOH,QA2DP,SACKtC,EAAM0C,KAAI,SAACG,GAAD,OACP,wBAAsBP,MAAOO,EAAKZ,GAAlC,SACKY,EAAKT,MADGS,EAAKZ,SAM1B,sBAAK2C,UAAU,mBAAf,UACI,uBAAOA,UAAU,iBAAiBqH,QAAQ,OAA1C,qBAGA,0BACIpJ,KAAK,OACLZ,GAAG,OACHG,KAAK,OACLU,IAAI,QACJR,MAAM,WACNS,IAAI,SANR,sBAOWrC,GAPX,0BAhFD,SAAC8B,GAChB7B,EAAQ6B,EAAEC,OAAOH,UA+ED,OAYJ,sBAAKsC,UAAU,mBAAf,UACI,uBAAOA,UAAU,iBAAiBqH,QAAQ,cAA1C,kBAGA,0BACIhK,GAAG,cACHG,KAAK,cACLY,KAAK,IACLC,KAAK,KACLC,YAAY,mBACZZ,MAAO1B,EACP2B,SAnGE,SAACC,GACvB3B,EAAe2B,EAAEC,OAAOH,aAsGZ,qBAAKsC,UAAU,0BAAf,SACI,uBACI/B,KAAK,WACLZ,GAAG,WACHG,KAAK,WACLc,YAAY,aACZX,SArGD,SAACC,GACpBzB,EAAYyB,EAAEC,OAAOH,YAwGT,sBAAKsC,UAAU,uBAAf,UACI,wBAAQA,UAAU,8BAA8BzB,QAjG3C,SAACX,GACtBA,EAAE0J,iBAjCF1H,EAASH,GAAiB,KAiIV,oBAGA,wBAAQO,UAAU,8BAA8BzB,QAzG1C,SAACX,GACvBA,EAAE0J,iBACF9K,KAuGgB,8CC9GT+K,EA/EU,WACrB,IAAMC,EAAgB/I,aAAY,SAACC,GAAD,OAAWA,EAAMF,eAC7CoB,EAAWC,cAFU,EAIK9E,mBAAS,IAJd,mBAIpBmB,EAJoB,KAIVC,EAJU,KAMrBoD,EAAW,uCAAG,4BAAA9C,EAAA,6DACVC,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEuC,QAASkI,EAAetL,SAAUA,IACzDc,KAAM,WALM,SAOOC,MAAM,gEAAiEP,GAP9E,gBASZkD,EAASF,GAAoB,IAC7BE,EdgCD,CACH3B,KAAM,ac3CU,2CAAH,qDAgCjB,OACI,cAAC,IAAO4C,IAAR,CACIb,UAAU,QACVuC,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,KAAM,CAAEF,QAAS,GACjBG,WAAY,CAAEyE,KAAM,CAAC,IAAM,IAAM,IAAM,MAL3C,SAOI,eAAC,IAAOvG,IAAR,CACIb,UAAU,cACVuC,QAAS,CAAEnB,MAAO,GAAKoB,QAAS,GAChCC,QAAS,CAAErB,MAAO,EAAGoB,QAAS,GAC9BE,KAAM,CAAEtB,MAAO,GAAKoB,QAAS,GAC7BG,WAAY,CAAEyE,KAAM,CAAC,IAAM,IAAM,IAAM,MAL3C,UAOI,qBAAIpH,UAAU,qBAAd,iCAAwDwH,KACxD,uBAAMxH,UAAU,oBAAhB,UACI,qBAAKA,UAAU,0BAAf,SACI,uBACI/B,KAAK,WACLZ,GAAG,WACHG,KAAK,WACLc,YAAY,aACZX,SAzCD,SAACC,GACpBzB,EAAYyB,EAAEC,OAAOH,YA4CT,sBAAKsC,UAAU,uBAAf,UACI,wBAAQA,UAAU,8BAA8BzB,QAtC3C,SAACX,GACtBA,EAAE0J,iBAJF1H,EAASF,GAAoB,KAyCb,oBAGA,wBAAQM,UAAU,8BAA8BzB,QApC1C,SAACX,GACvBA,EAAE0J,iBACF/H,KAkCgB,8CCpDTkI,EAhBG,WACd,IAAMC,EAAuBjJ,aAAY,SAACC,GAAD,OAAWA,EAAMiJ,iBACpDC,EAA0BnJ,aAAY,SAACC,GAAD,OAAWA,EAAMmJ,oBAE7D,OACI,sBAAK7H,UAAU,YAAf,UACI,sBAAKA,UAAU,MAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,OAEJ,cAAC,IAAD,UAAkB0H,GAAwB,cAAC,EAAD,MAC1C,cAAC,IAAD,UAAkBE,GAA2B,cAAC,EAAD,U,OCJ1CE,EATH,WACR,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWR,IACjC,cAAC,IAAD,CAAOM,KAAK,SAASC,OAAK,EAACC,UAAW3H,QCEnC4H,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCECQ,EATK,WAAmC,IAAlCjK,EAAiC,uDAAzB,aAAckK,EAAW,uCAClD,OAAOA,EAAO3K,MACV,IAAK,WACD,OAAO2K,EAAOpJ,QAClB,QACI,OAAOd,ICIJmK,EATM,WAAgC,IAA/BnK,EAA8B,uDAAtB,UAAWkK,EAAW,uCAChD,OAAOA,EAAO3K,MACV,IAAK,YACD,OAAO2K,EAAOpJ,QAClB,QACI,OAAOd,ICIJoK,EATiB,WAAwB,IAAvBpK,EAAsB,uDAAd,EAAGkK,EAAW,uCACnD,OAAQA,EAAO3K,MACX,IAAK,YACD,OAAO2K,EAAOpJ,QAClB,QACI,OAAOd,ICMJqK,EAXS,WAA4B,IAA3BrK,EAA0B,wDAAXkK,EAAW,uCAC/C,OAAOA,EAAO3K,MACV,IAAK,cACD,OAAO,EACX,IAAK,eACD,OAAO,EACX,QACI,OAAOS,ICEJsK,EATc,WAA4B,IAA3BtK,EAA0B,wDAAXkK,EAAW,uCACpD,OAAQA,EAAO3K,MACX,IAAK,sBACD,OAAO2K,EAAOpJ,QAClB,QACI,OAAOd,ICIJuK,EATmB,WAA4B,IAA3BvK,EAA0B,wDAAXkK,EAAW,uCACzD,OAAQA,EAAO3K,MACX,IAAK,UACD,OAAQS,EACZ,QACI,OAAOA,ICIJwK,GATiB,WAA4B,IAA3BxK,EAA0B,wDAAXkK,EAAW,uCACvD,OAAQA,EAAO3K,MACX,IAAK,yBACD,OAAO2K,EAAOpJ,QAClB,QACI,OAAOd,ICIJyK,GATY,WAAwB,IAAvBzK,EAAsB,uDAAd,EAAGkK,EAAW,uCAC9C,OAAQA,EAAO3K,MACX,IAAK,mBACD,OAAO2K,EAAOpJ,QAClB,QACI,OAAOd,ICgBJ0K,GAXKC,YAAgB,CAChCzI,WAAY+H,EACZxG,YAAa0G,EACblK,iBAAkBmK,EAClBvI,YAAawI,EACbpB,cAAeqB,EACfnB,iBAAkBqB,GAClB5E,mBAAoB2E,EACpBzK,YAAa2K,K,SCPXG,GCXmB,WACrB,IACI,IAAMC,EAAkBC,aAAaC,QAAQ,SAC7C,GAAwB,OAApBF,EAA0B,OAC9B,OAAOzM,KAAK4M,MAAMH,GACpB,MAAOI,GACL,QDKeC,GACjBC,GAAQC,YACVC,GACAT,GACAU,OAAOC,8BAAgCD,OAAOC,gCAGlDJ,GAAMK,WAAU,YCRS,SAACxL,GACtB,IACI8K,aAAaW,QAAQ,QAASrN,KAAKC,UAAU2B,IAC/C,WDMJ0L,CAAU,CACRjI,YAAa0H,GAAMQ,WAAWlI,iBAKlCmI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUX,MAAOA,GAAjB,SACE,cAAC,KAAD,CAAYY,SAAS,IAArB,SACE,cAAC,EAAD,UAINC,SAASC,eAAe,SAG1BzC,M","file":"static/js/main.cca4681c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './../AdminPanel.css';\r\n\r\nconst AddEventPanel = () => {\r\n    const API_URL_GET_COURSES = 'https://aleksanderblaszkiewicz.pl/kiedykolos/get_courses.php';\r\n    const API_URL_GET_GROUPS = 'https://aleksanderblaszkiewicz.pl/kiedykolos/get_groups.php';\r\n    const API_URL_GET_TYPES = 'https://aleksanderblaszkiewicz.pl/kiedykolos/get_types.php';\r\n\r\n    const [courses, setCourses] = useState([]);\r\n    const [groups, setGroups] = useState([]);\r\n    const [types, setTypes] = useState([]);\r\n\r\n    const [courseID, setCourseID] = useState(0);\r\n    const [groupID, setGroupID] = useState(0);\r\n    const [typeID, setTypeID] = useState(0);\r\n    const [date, setDate] = useState('2020-12-12');\r\n    const [time, setTime] = useState('12:00');\r\n    const [description, setDescription] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    useEffect(() => {\r\n        getCourses();\r\n        getGroups();\r\n        getTypes();\r\n    }, []);\r\n\r\n    const addEvent = async () => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                courseID: courseID,\r\n                groupID: groupID,\r\n                time: time,\r\n                date: date,\r\n                description: description,\r\n                typeID: typeID,\r\n                password: password,\r\n            }),\r\n            mode: 'no-cors', // no-cors, cors, *same-origin\r\n        };\r\n        const response = await fetch(`https://aleksanderblaszkiewicz.pl/kiedykolos/add_event.php`, requestOptions);\r\n    };\r\n\r\n    const getCourses = async () => {\r\n        const response = await fetch(API_URL_GET_COURSES);\r\n        const data = await response.json();\r\n        setCourses(data);\r\n        setCourseID(data[0].id);\r\n    };\r\n\r\n    const getGroups = async () => {\r\n        const response = await fetch(API_URL_GET_GROUPS);\r\n        const data = await response.json();\r\n        setGroups(data);\r\n        setGroupID(data[0].id);\r\n    };\r\n\r\n    const getTypes = async () => {\r\n        const response = await fetch(API_URL_GET_TYPES);\r\n        const data = await response.json();\r\n        setTypes(data);\r\n        setTypeID(data[0].id);\r\n    };\r\n\r\n    const updateCourseID = (e) => {\r\n        setCourseID(e.target.value);\r\n    };\r\n\r\n    const updateDate = (e) => {\r\n        setDate(e.target.value);\r\n    };\r\n\r\n    const updateGroupID = (e) => {\r\n        setGroupID(e.target.value);\r\n    };\r\n\r\n    const updateTime = (e) => {\r\n        setTime(e.target.value);\r\n    };\r\n\r\n    const updateDescription = (e) => {\r\n        setDescription(e.target.value);\r\n    };\r\n\r\n    const updateTypeID = (e) => {\r\n        setTypeID(e.target.value);\r\n    };\r\n\r\n    const updatePassword = (e) => {\r\n        setPassword(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <div class='edition'>\r\n            <h2 class='edition__header'>Dodawanie wydarzenia</h2>\r\n\r\n            <div class='edition__setting'>\r\n                <label class='edition__label' for='course'>\r\n                    Przedmiot\r\n                </label>\r\n                <select name='course' id='course' form='add-event' value={courseID} onChange={updateCourseID}>\r\n                    {courses.map((course) => (\r\n                        <option key={course.id} value={course.id}>\r\n                            {course.name}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div class='edition__setting'>\r\n                <label class='edition__label' for='group'>\r\n                    Grupa\r\n                </label>\r\n                <select name='groupID' id='groupID' form='add-event' value={groupID} onChange={updateGroupID}>\r\n                    {groups.map((group) => (\r\n                        <option key={group.id} value={group.id}>\r\n                            {group.name}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div class='edition__setting'>\r\n                <label class='edition__label' for='type'>\r\n                    Typ\r\n                </label>\r\n                <select name='typeID' id='typeID' form='add-event' value={typeID} onChange={updateTypeID}>\r\n                    {types.map((type) => (\r\n                        <option key={type.id} value={type.id}>\r\n                            {type.name}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div class='edition__setting'>\r\n                <label class='edition__label' for='date'>\r\n                    Data\r\n                </label>\r\n                <input\r\n                    type='date'\r\n                    id='date'\r\n                    name='date'\r\n                    value='2020-11-25'\r\n                    min='2020-11-25'\r\n                    max='2021-12-31'\r\n                    value={date}\r\n                    onChange={updateDate}\r\n                ></input>\r\n            </div>\r\n\r\n            <div class='edition__setting'>\r\n                <label class='edition__label' for='time'>\r\n                    Godzina\r\n                </label>\r\n                <input\r\n                    type='time'\r\n                    id='time'\r\n                    name='time'\r\n                    min='07:00'\r\n                    value='16:00:00'\r\n                    max='21:00'\r\n                    value={time}\r\n                    onChange={updateTime}\r\n                ></input>\r\n            </div>\r\n\r\n            <div class='edition__setting'>\r\n                <label class='edition__label' for='description'>\r\n                    Opis\r\n                </label>\r\n                <textarea\r\n                    id='description'\r\n                    name='description'\r\n                    rows='5'\r\n                    cols='30'\r\n                    placeholder='Tu wpisz opis...'\r\n                    value={description}\r\n                    onChange={updateDescription}\r\n                ></textarea>\r\n            </div>\r\n\r\n            <div class='edition__setting submit'>\r\n                <input\r\n                    type='password'\r\n                    id='password'\r\n                    name='password'\r\n                    placeholder='Hasło'\r\n                    onChange={updatePassword}\r\n                ></input>\r\n                <button class='submit__button submit__button--delete'>Usuń</button>\r\n                <button class='submit__button' onClick={addEvent}>\r\n                    Zapisz\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddEventPanel;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './../AdminPanel.css';\r\n\r\nconst AddEventPanel = () => {\r\n    const chosenEvent = useSelector((state) => state.chosenEventAdmin);\r\n    const API_URL_GET_COURSES = 'https://aleksanderblaszkiewicz.pl/kiedykolos/get_courses.php';\r\n    const API_URL_GET_GROUPS = 'https://aleksanderblaszkiewicz.pl/kiedykolos/get_groups.php';\r\n    const API_URL_GET_TYPES = 'https://aleksanderblaszkiewicz.pl/kiedykolos/get_types.php';\r\n\r\n    const [event, setEvent] = useState([]);\r\n\r\n    const [courses, setCourses] = useState([]);\r\n    const [groups, setGroups] = useState([]);\r\n    const [types, setTypes] = useState([]);\r\n\r\n    const [courseID, setCourseID] = useState(0);\r\n    const [groupID, setGroupID] = useState(0);\r\n    const [typeID, setTypeID] = useState(0);\r\n    const [date, setDate] = useState('2020-12-12');\r\n    const [time, setTime] = useState('12:00');\r\n    const [description, setDescription] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    useEffect(() => {\r\n        getCourses();\r\n        getGroups();\r\n        getTypes();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getEventInfo();\r\n    }, [chosenEvent]);\r\n\r\n    useEffect(() => {\r\n        initializeEventInfo();\r\n    }, [event]);\r\n\r\n    const initializeEventInfo = () => {\r\n        console.log('Initializing fields');\r\n        setDescription(event.description);\r\n        setDate(event.date);\r\n        setTime(event.time);\r\n        setGroupID(event.group_id);\r\n        setTypeID(event.type_id);\r\n        setCourseID(event.course_id);\r\n    };\r\n\r\n    const editEvent = async () => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                eventID: chosenEvent,\r\n                courseID: courseID,\r\n                groupID: groupID,\r\n                time: time,\r\n                date: date,\r\n                description: description,\r\n                typeID: typeID,\r\n                password: password,\r\n            }),\r\n            mode: 'no-cors', // no-cors, cors, *same-origin\r\n        };\r\n        const response = await fetch(`https://aleksanderblaszkiewicz.pl/kiedykolos/edit_event.php`, requestOptions);\r\n    };\r\n\r\n    const deleteEvent = async () => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ eventID: chosenEvent, password: password }),\r\n            mode: 'no-cors', // no-cors, cors, *same-origin\r\n        };\r\n        const response = await fetch(`https://aleksanderblaszkiewicz.pl/kiedykolos/delete_event.php`, requestOptions);\r\n    };\r\n\r\n    const getCourses = async () => {\r\n        const response = await fetch(API_URL_GET_COURSES);\r\n        const data = await response.json();\r\n        setCourses(data);\r\n        setCourseID(data[0].id);\r\n    };\r\n\r\n    const getGroups = async () => {\r\n        const response = await fetch(API_URL_GET_GROUPS);\r\n        const data = await response.json();\r\n        setGroups(data);\r\n        setGroupID(data[0].id);\r\n    };\r\n\r\n    const getTypes = async () => {\r\n        const response = await fetch(API_URL_GET_TYPES);\r\n        const data = await response.json();\r\n        setTypes(data);\r\n        setTypeID(data[0].id);\r\n    };\r\n\r\n    const getEventInfo = async () => {\r\n        const response = await fetch(\r\n            `https://aleksanderblaszkiewicz.pl/kiedykolos/get_event_details.php?id=${chosenEvent}`\r\n        );\r\n        const data = await response.json();\r\n        setEvent(data[0]);\r\n        console.log(data[0]);\r\n    };\r\n\r\n    const updateCourseID = (e) => {\r\n        setCourseID(e.target.value);\r\n    };\r\n\r\n    const updateDate = (e) => {\r\n        setDate(e.target.value);\r\n    };\r\n\r\n    const updateGroupID = (e) => {\r\n        setGroupID(e.target.value);\r\n    };\r\n\r\n    const updateTime = (e) => {\r\n        setTime(e.target.value);\r\n    };\r\n\r\n    const updateDescription = (e) => {\r\n        setDescription(e.target.value);\r\n    };\r\n\r\n    const updateTypeID = (e) => {\r\n        setTypeID(e.target.value);\r\n    };\r\n\r\n    const updatePassword = (e) => {\r\n        setPassword(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <div class='edition'>\r\n            <h2 class='edition__header'>Edycja Wydarzenia {event.id}</h2>\r\n\r\n            <div class='edition__setting'>\r\n                <label class='edition__label' for='course'>\r\n                    Przedmiot\r\n                </label>\r\n                <select name='course' id='course' form='add-event' value={courseID} onChange={updateCourseID}>\r\n                    {courses.map((course) => (\r\n                        <option key={course.id} value={course.id}>\r\n                            {course.name}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div class='edition__setting'>\r\n                <label class='edition__label' for='group'>\r\n                    Grupa\r\n                </label>\r\n                <select name='groupID' id='groupID' form='add-event' value={groupID} onChange={updateGroupID}>\r\n                    {groups.map((group) => (\r\n                        <option key={group.id} value={group.id}>\r\n                            {group.name}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div class='edition__setting'>\r\n                <label class='edition__label' for='type'>\r\n                    Typ\r\n                </label>\r\n                <select name='typeID' id='typeID' form='add-event' value={typeID} onChange={updateTypeID}>\r\n                    {types.map((type) => (\r\n                        <option key={type.id} value={type.id}>\r\n                            {type.name}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div class='edition__setting'>\r\n                <label class='edition__label' for='date'>\r\n                    Data\r\n                </label>\r\n                <input\r\n                    type='date'\r\n                    id='date'\r\n                    name='date'\r\n                    value='2020-11-25'\r\n                    min='2020-11-25'\r\n                    max='2021-12-31'\r\n                    value={date}\r\n                    onChange={updateDate}\r\n                ></input>\r\n            </div>\r\n\r\n            <div class='edition__setting'>\r\n                <label class='edition__label' for='time'>\r\n                    Godzina\r\n                </label>\r\n                <input\r\n                    type='time'\r\n                    id='time'\r\n                    name='time'\r\n                    min='07:00'\r\n                    value='16:00:00'\r\n                    max='21:00'\r\n                    value={time}\r\n                    onChange={updateTime}\r\n                ></input>\r\n            </div>\r\n\r\n            <div class='edition__setting'>\r\n                <label class='edition__label' for='description'>\r\n                    Opis\r\n                </label>\r\n                <textarea\r\n                    id='description'\r\n                    name='description'\r\n                    rows='5'\r\n                    cols='30'\r\n                    placeholder='Tu wpisz opis...'\r\n                    value={description}\r\n                    onChange={updateDescription}\r\n                ></textarea>\r\n            </div>\r\n\r\n            <div class='edition__setting submit'>\r\n                <input\r\n                    type='password'\r\n                    id='password'\r\n                    name='password'\r\n                    placeholder='Hasło'\r\n                    onChange={updatePassword}\r\n                ></input>\r\n                <button class='submit__button submit__button--delete' onClick={deleteEvent}>\r\n                    Usuń\r\n                </button>\r\n                <button class='submit__button' onClick={editEvent}>\r\n                    Zapisz\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddEventPanel;\r\n","export const setDate = (value) => {\r\n    return {\r\n        type: 'SET_DATE',\r\n        payload: value,\r\n    };\r\n};\r\n\r\nexport const setGroup = (value) => {\r\n    return {\r\n        type: 'SET_GROUP',\r\n        payload: value,\r\n    };\r\n};\r\n\r\nexport const setChosenEventAdmin = (value) => {\r\n    return {\r\n        type: 'SET_EVENT',\r\n        payload: value,\r\n    };\r\n};\r\n\r\nexport const editEnable = () => {\r\n    return {\r\n        type: 'EDIT_ENABLE',\r\n    };\r\n};\r\n\r\nexport const editDisable = () => {\r\n    return {\r\n        type: 'EDIT_DISABLE',\r\n    };\r\n};\r\n\r\nexport const setAddEventPopup = (value) => {\r\n    return {\r\n        type: 'SET_ADD_EVENT_POPUP',\r\n        payload: value,\r\n    };\r\n};\r\n\r\nexport const setEditEventPopup = (value) => {\r\n    return {\r\n        type: 'SET_EDIT_EVENT_POPUP',\r\n        payload: value,\r\n    };\r\n};\r\n\r\nexport const setDeleteEventPopup = (value) => {\r\n    return {\r\n        type: 'SET_DELETE_EVENT_POPUP',\r\n        payload: value,\r\n    };\r\n};\r\n\r\nexport const forceEventsRefresh = () => {\r\n    return {\r\n        type: 'REFRESH',\r\n    };\r\n};\r\n\r\nexport const setChosenEvent = (value) => {\r\n    return {\r\n        type: 'SET_CHOSEN_EVENT',\r\n        payload: value,\r\n    };\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { editDisable, editEnable, setChosenEventAdmin } from '../actions';\r\nimport './../AdminPanel.css';\r\n\r\nconst EventList = () => {\r\n    const API_URL = `https://aleksanderblaszkiewicz.pl/kiedykolos/get_events.php`;\r\n    const [events, setEvents] = useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        getEvents();\r\n    }, []);\r\n\r\n    const getEvents = async () => {\r\n        const response = await fetch(API_URL);\r\n        const data = await response.json();\r\n        setEvents(data);\r\n        console.log(data);\r\n    };\r\n\r\n    const addEventClicked = () => {\r\n        dispatch(editDisable());\r\n    };\r\n\r\n    return (\r\n        <div class='extension'>\r\n            <div class='extension__events'>\r\n                <h2 class='events__header'>Wydarzenia</h2>\r\n                <ul class='events-list'>\r\n                    <li class='events-list__item events-list__adder' onClick={() => addEventClicked()}>\r\n                        <i class='far fa-plus-square'></i>\r\n                        <h3>Dodaj Wydarzenie</h3>\r\n                    </li>\r\n                    {events.map((event) => (\r\n                        <Event event={event} />\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Event = ({ event }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const style = () => {\r\n        let styleText = '';\r\n        if (event.type == 'Kolokwium') {\r\n            styleText += ' extension__event--exam ';\r\n        } else if (event.type == 'Projekt') {\r\n            styleText += ' extension__event--project ';\r\n        } else if (event.type == 'Egzamin') {\r\n            styleText += ' extension__event--exam ';\r\n        } else if (event.type == 'Laboratorium') {\r\n            styleText += ' extension__event--lab ';\r\n        } else if (event.type == 'Inne') {\r\n            styleText += ' extension__event--other ';\r\n        }\r\n\r\n        // if(event == chosenEvent) {\r\n        //     styleText+= \" events-list__item--selected \";\r\n        // }\r\n        return styleText;\r\n    };\r\n\r\n    const setChosenEventAdminGlobal = () => {\r\n        dispatch(setChosenEventAdmin(event.id));\r\n        dispatch(editEnable());\r\n    };\r\n\r\n    return (\r\n        <li class={'extension__event ' + style()} onClick={() => setChosenEventAdminGlobal()}>\r\n            <h3 className='extension__event-title'>{event.name}</h3>\r\n            <div class='extension__event-panel'>\r\n                <div class='extension__event-info'>17:00</div>\r\n                <div class='extension__event-info'>{event.type}</div>\r\n                <div class='extension__event-info'>{event.date}</div>\r\n                <div class='extension__event-info'>{event.group_name}</div>\r\n            </div>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default EventList;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport AddEventPanel from './AddEventPanel';\r\nimport EditEventPanel from './EditEventPanel';\r\nimport EventList from './EventList';\r\nimport './../AdminPanel.css';\r\n\r\nconst AdminPanel = () => {\r\n    const editEnabled = useSelector((state) => state.editEnabled);\r\n    return (\r\n        <div className='container'>\r\n            <div className='app app--small'>\r\n                <EventList />\r\n\r\n                {editEnabled ? <EditEventPanel /> : <AddEventPanel />}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminPanel;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setAddEventPopup, setDate } from '../../actions';\r\nimport { motion } from 'framer-motion';\r\nimport dayjs from 'dayjs';\r\n\r\nconst CalendarCard = ({ cardDate, isInCurrentMonth, events }) => {\r\n    const dispatch = useDispatch();\r\n    const chosenDate = useSelector((state) => state.chosenDate);\r\n\r\n    const onCallendarCardClicked = () => {\r\n        dispatch(setDate(cardDate));\r\n    };\r\n\r\n    const style = () => {\r\n        let styleText = '';\r\n\r\n        if (!isInCurrentMonth) {\r\n            return 'day--inactive ';\r\n        }\r\n\r\n        if (cardDate === chosenDate) {\r\n            styleText += 'day--selected ';\r\n        }\r\n\r\n        if (dayjs(cardDate).day() === 0 || dayjs(cardDate).day() === 6) {\r\n            styleText += 'day--weekend ';\r\n        }\r\n\r\n        if (dayjs(cardDate).format('DD-MM-YYYY') === dayjs().format('DD-MM-YYYY')) {\r\n            styleText += 'day--current ';\r\n        }\r\n\r\n        return styleText;\r\n    };\r\n\r\n    return (\r\n        <motion.div\r\n            className={'day ' + style()}\r\n            tabindex='0'\r\n            onClick={onCallendarCardClicked}\r\n            whileHover={{ y: -2, scale: 1.05 }}\r\n            whileTap={{ y: 0, scale: 0.95 }}\r\n        >\r\n            <div className='day__events'>\r\n                <ul className='day__events-list'>\r\n                    {events.map((event, index) => (\r\n                        <Event key={index} event={event} />\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <div className='day__number'>{dayjs(cardDate).format('DD')}</div>\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nexport default CalendarCard;\r\n\r\nconst Event = ({ event }) => {\r\n    const styles = {\r\n        Kolokwium: 'day__event--exam',\r\n        Projekt: 'day__event--project',\r\n        Egzamin: 'day__event--exam',\r\n        Laboratorium: 'day__event--lab',\r\n        Inne: 'day__event--other',\r\n    };\r\n\r\n    return (\r\n        <li className={'day__event ' + styles[event.type]} key={event.id}>\r\n            {event.short_name.toUpperCase()}\r\n        </li>\r\n    );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setGroup } from '../../actions';\r\n\r\nconst CalendarTools = () => {\r\n    const [settingsVisible, SetSettingsVisible] = useState(false);\r\n\r\n    const toggleVisible = () => {\r\n        SetSettingsVisible(!settingsVisible);\r\n    };\r\n\r\n    return (\r\n        <div className='calendar__options'>\r\n            <button className='button button--notifications'>\r\n                <div className='button__counter'>1</div>\r\n            </button>\r\n            <motion.button\r\n                className='button button--settings'\r\n                onClick={toggleVisible}\r\n                whileTap={{ scale: 0.9 }}\r\n                whileHover={{ scale: 1.1 }}\r\n            />\r\n            <AnimatePresence>{settingsVisible && <Settings />}</AnimatePresence>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CalendarTools;\r\n\r\nconst Settings = () => {\r\n    const dispatch = useDispatch();\r\n    const chosenGroup = useSelector((state) => state.chosenGroup);\r\n\r\n    const setGroupGlobal = (name) => {\r\n        dispatch(setGroup(name));\r\n    };\r\n\r\n    const style = (name) => {\r\n        if (name === chosenGroup) return ' calendar__setting-option--selected-solid ';\r\n    };\r\n\r\n    const groups = [];\r\n    for (let i = 1; i < 7; i++) {\r\n        groups.push(\r\n            <motion.li\r\n                key={i}\r\n                className={'calendar__setting-option ' + style(`Grupa ${i}`)}\r\n                whileTap={{ scale: 0.9, y: 0 }}\r\n                whileHover={{ scale: 1.1, y: -5 }}\r\n                onClick={() => setGroupGlobal(`Grupa ${i}`)}\r\n            >\r\n                {i}\r\n            </motion.li>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <motion.div\r\n            className='calendar__settings'\r\n            initial={{ opacity: 0, y: -100, scale: 0 }}\r\n            animate={{ opacity: 1, y: 0, scale: 1 }}\r\n            exit={{ opacity: 0, y: -100, scale: 0 }}\r\n            transition={{ type: 'spring', stiffness: 600, damping: 50 }}\r\n        >\r\n            <div className='calendar__setting'>\r\n                <h3 className='calendar__setting-name'>Grupa</h3>\r\n                <ul className='calendar__setting-list'>{groups}</ul>\r\n            </div>\r\n            <div className='calendar__setting'>\r\n                <h3 className='calendar__setting-name'>Motyw</h3>\r\n                <ul className='calendar__setting-list'>\r\n                    <div className='calendar__setting-option calendar__setting-option--dark'></div>\r\n                    <div className='calendar__setting-option calendar__setting-option--light calendar__setting-option--selected'></div>\r\n                </ul>\r\n            </div>\r\n        </motion.div>\r\n    );\r\n};\r\n","import { motion } from 'framer-motion';\r\n\r\nconst WeekDays = () => {\r\n    const container = {\r\n        hidden: { opacity: 0 },\r\n        show: {\r\n            opacity: 1,\r\n            transition: {\r\n                staggerChildren: 0.05,\r\n            },\r\n        },\r\n    };\r\n    const item = {\r\n        hidden: { opacity: 0, x: -25 },\r\n        show: { opacity: 1, x: 0 },\r\n    };\r\n\r\n    const calendarDays = ['pon.', 'wt.', 'śr.', 'czw.', 'pt.', 'sb.', 'ndz.'].map((day) => {\r\n        return (\r\n            <motion.li key={day} className='calendar__names-item' variants={item}>\r\n                {day}\r\n            </motion.li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className='calendar__names'>\r\n            <motion.ul className='calendar__names-list' variants={container} initial='hidden' animate='show'>\r\n                {calendarDays}\r\n            </motion.ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WeekDays;\r\n","export const getAllEvents = async (id) => {\r\n    const URL = `https://aleksanderblaszkiewicz.pl/kiedykolos/get_events.php`;\r\n\r\n    const response = await fetch(URL);\r\n    const data = await response.json();\r\n\r\n    return data;\r\n};\r\n\r\nexport const getDayEvents = async (id, date) => {\r\n    const URL = `https://aleksanderblaszkiewicz.pl/kiedykolos/get_events_for_day.php?date=${date}`;\r\n\r\n    const response = await fetch(URL);\r\n    const data = await response.json();\r\n\r\n    return data;\r\n};\r\n\r\nexport const getGroups = async (id) => {\r\n    const URL = `https://aleksanderblaszkiewicz.pl/kiedykolos/get_groups.php`;\r\n\r\n    const response = await fetch(URL);\r\n    const data = await response.json();\r\n\r\n    return data;\r\n};\r\n\r\nexport const getCourses = async (id) => {\r\n    const URL = `https://aleksanderblaszkiewicz.pl/kiedykolos/get_courses.php`;\r\n\r\n    const response = await fetch(URL);\r\n    const data = await response.json();\r\n\r\n    return data;\r\n};\r\n\r\nexport const getTypes = async (id) => {\r\n    const URL = `https://aleksanderblaszkiewicz.pl/kiedykolos/get_types.php`;\r\n\r\n    const response = await fetch(URL);\r\n    const data = await response.json();\r\n\r\n    return data;\r\n};\r\n","import { motion } from 'framer-motion';\r\n\r\nconst MonthTitle = ({ month, swipeDirection }) => {\r\n    const monthsWords = [\r\n        'Styczeń',\r\n        'Luty',\r\n        'Marzec',\r\n        'Kwiecień',\r\n        'Maj',\r\n        'Czerwiec',\r\n        'Lipiec',\r\n        'Sierpień',\r\n        'Wrzesień',\r\n        'Październik',\r\n        'Listopad',\r\n        'Grudzień',\r\n    ];\r\n\r\n    return (\r\n        <motion.h2\r\n            key={month}\r\n            className='calendar__title'\r\n            initial={{ x: swipeDirection * 50 }}\r\n            animate={{ x: 0 }}\r\n            transition={{ type: 'spring', stiffness: 600, damping: 50 }}\r\n        >\r\n            {monthsWords[month - 1]}\r\n        </motion.h2>\r\n    );\r\n};\r\n\r\nexport default MonthTitle;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { motion } from 'framer-motion';\r\nimport dayjs from 'dayjs';\r\nimport { setDate } from '../../actions';\r\nimport CalendarCard from './CalendarCard';\r\nimport CalendarTools from './CalendarTools';\r\nimport WeekDays from './WeekDays';\r\nimport './../API/Api';\r\nimport { getAllEvents } from './../API/Api';\r\nimport MonthTitle from './MonthTitle';\r\n\r\nconst Calendar = () => {\r\n    const [events, setEvents] = useState([]);\r\n    const [days, setDays] = useState([]);\r\n    const [month, setMonth] = useState();\r\n    const [monthOffset, setMonthOffset] = useState(0);\r\n    const [swipeDirection, setSwipeDirection] = useState(1);\r\n\r\n    const dispatch = useDispatch();\r\n    const chosenGroup = useSelector((state) => state.chosenGroup);\r\n    const forceRefresh = useSelector((state) => state.forceEventsRefresh);\r\n\r\n    const daysOfWeek = [7, 1, 2, 3, 4, 5, 6];\r\n\r\n    let today = dayjs();\r\n\r\n    useEffect(() => {\r\n        setMonth(parseInt(today.format('MM')));\r\n        dispatch(setDate(today.format('YYYY-MM-DD')));\r\n\r\n        initializeMonthDays(0);\r\n        getEvents();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getEvents();\r\n    }, [chosenGroup, forceRefresh]);\r\n\r\n    const getEvents = async () => {\r\n        const data = await getAllEvents();\r\n        const filteredData = data.filter(shouldBeDisplayed);\r\n        setEvents(filteredData);\r\n    };\r\n\r\n    const increaseMonth = () => {\r\n        setSwipeDirection(1);\r\n        const offset = monthOffset + 1;\r\n        setMonthOffset(offset);\r\n        setMonth(parseInt(today.add(offset, 'month').format('MM')));\r\n        initializeMonthDays(offset);\r\n    };\r\n\r\n    const decreaseMonth = () => {\r\n        setSwipeDirection(-1);\r\n        const offset = monthOffset - 1;\r\n        setMonthOffset(offset);\r\n        setMonth(parseInt(today.add(offset, 'month').format('MM')));\r\n        initializeMonthDays(offset);\r\n    };\r\n\r\n    const shouldBeDisplayed = (event) => {\r\n        return event.group_name === 'Wszystkie' || event.group_name === chosenGroup;\r\n    };\r\n\r\n    const initializeMonthDays = (offset) => {\r\n        const desiredDay = today.add(offset, 'month');\r\n        const daysTemp = new Array(42);\r\n        const startDayOfMonth = daysOfWeek[desiredDay.startOf('month').day()]; // 1 - monday, 7 sunday\r\n\r\n        const startingDay = desiredDay.startOf('month').subtract(startDayOfMonth - 1, 'day');\r\n\r\n        for (let i = 0; i < 42; i++) daysTemp[i] = startingDay.add(i, 'day').format('YYYY-MM-DD');\r\n\r\n        setDays(daysTemp);\r\n    };\r\n\r\n    const getEventsForDay = (day) => {\r\n        return events.filter((eventDay) => eventDay.date === day);\r\n    };\r\n\r\n    const isDayInCurrentMonth = (day) => {\r\n        const thisMonth = today.add(monthOffset, 'month');\r\n        return dayjs(day).format('MM') === thisMonth.format('MM');\r\n    };\r\n\r\n    const calendarRowVariants = {\r\n        hidden: { opacity: 0, x: swipeDirection * 100 },\r\n        show: {\r\n            opacity: 1,\r\n            x: 0,\r\n            transition: {\r\n                type: 'spring',\r\n                stiffness: 600,\r\n                damping: 50,\r\n            },\r\n        },\r\n    };\r\n\r\n    var rows = days\r\n        .map((day) => (\r\n            <CalendarCard\r\n                key={day}\r\n                isInCurrentMonth={isDayInCurrentMonth(day)}\r\n                cardDate={day}\r\n                events={getEventsForDay(day)}\r\n                swipeDirection={swipeDirection}\r\n            />\r\n        ))\r\n        .reduce((r, element, index) => {\r\n            index % 7 === 0 && r.push([]);\r\n            r[r.length - 1].push(element);\r\n            return r;\r\n        }, [])\r\n        .map((rowContent, index) => (\r\n            <div key={month + index} className='calendar__row'>\r\n                {rowContent}\r\n            </div>\r\n        ));\r\n\r\n    return (\r\n        <div className='calendar'>\r\n            <div className='calendar__header'>\r\n                <button className='button button--previous' onClick={() => decreaseMonth()}></button>\r\n                <MonthTitle month={month} swipeDirection={swipeDirection} />\r\n                <button className='button button--next' onClick={() => increaseMonth()}></button>\r\n            </div>\r\n            <CalendarTools />\r\n            <WeekDays />\r\n            <motion.div\r\n                className='calendar__days'\r\n                key={month}\r\n                initial='hidden'\r\n                animate='show'\r\n                variants={calendarRowVariants}\r\n            >\r\n                {rows}\r\n            </motion.div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Calendar;\r\n","import { motion } from 'framer-motion';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setChosenEvent, setChosenEventAdmin, setDeleteEventPopup } from '../../actions';\r\n\r\nconst EventButton = ({ event, setChosenEventLocal, chosenEvent }) => {\r\n    const dispatch = useDispatch();\r\n    const item = {\r\n        hidden: { opacity: 0, x: 100 },\r\n        show: {\r\n            opacity: 1,\r\n            x: 0,\r\n            transition: {\r\n                type: 'spring',\r\n                stiffness: 600,\r\n                damping: 50,\r\n            },\r\n        },\r\n    };\r\n    const style = () => {\r\n        let styleText = ' ';\r\n        const styles = {\r\n            Kolokwium: 'extension__event--exam',\r\n            Projekt: 'extension__event--project',\r\n            Egzamin: 'extension__event--exam',\r\n            Laboratorium: 'extension__event--lab',\r\n            Inne: 'extension__event--other',\r\n        };\r\n        styleText += styles[event.type];\r\n        if (event === chosenEvent) styleText += ' extension__event--selected ';\r\n\r\n        return styleText;\r\n    };\r\n\r\n    const deleteEventClicked = () => {\r\n        dispatch(setDeleteEventPopup(true));\r\n        dispatch(setChosenEvent(event.id));\r\n    };\r\n\r\n    return (\r\n        <motion.li\r\n            key={event.id}\r\n            className={'extension__event' + style()}\r\n            variants={item}\r\n            whileTap={{ scale: 0.95 }}\r\n            whileHover={{ y: -5, scale: 1.02 }}\r\n            onClick={() => setChosenEventLocal(event)}\r\n        >\r\n            <h3 className='extension__event-title'>{event.name}</h3>\r\n            <div className='extension__event-panel'>\r\n                <div className='extension__event-info'>{event.time.slice(0, 5)}</div>\r\n                <div className='extension__event-info'>{event.type}</div>\r\n                <div className='extension__event-info'>\r\n                    <button onClick={deleteEventClicked}>USUN</button>\r\n                </div>\r\n            </div>\r\n        </motion.li>\r\n    );\r\n};\r\n\r\nexport default EventButton;\r\n","import { motion } from 'framer-motion';\r\n\r\nconst EventDescription = ({ event }) => {\r\n    const titleTransition = {\r\n        type: 'spring',\r\n        stiffness: 600,\r\n        damping: 50,\r\n        delay: 0,\r\n    };\r\n\r\n    const descriptionTransition = {\r\n        type: 'spring',\r\n        stiffness: 600,\r\n        damping: 50,\r\n        delay: 0.1,\r\n    };\r\n    return (\r\n        <div className='app__info'>\r\n            {event && (\r\n                <div key={event.id}>\r\n                    <motion.h3\r\n                        className='app__event-title'\r\n                        initial={{ y: 10, opacity: 0 }}\r\n                        animate={{ y: 0, opacity: 1 }}\r\n                        transition={titleTransition}\r\n                    >\r\n                        {event.name}\r\n                    </motion.h3>\r\n                    <motion.ul className='app__links' />\r\n                    <motion.div\r\n                        className='app__info-text'\r\n                        style={{ whiteSpace: 'pre-line' }}\r\n                        initial={{ y: 10, opacity: 0 }}\r\n                        animate={{ y: 0, opacity: 1 }}\r\n                        transition={descriptionTransition}\r\n                    >\r\n                        {event.description}\r\n                    </motion.div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EventDescription;\r\n","import { useDispatch } from 'react-redux';\r\nimport { setAddEventPopup } from '../../actions';\r\n\r\nconst AddButton = () => {\r\n    const dispatch = useDispatch();\r\n    const openAddEventPopup = () => {\r\n        dispatch(setAddEventPopup(true));\r\n    };\r\n\r\n    return (\r\n        <li className='extension__event--adder'>\r\n            <button className='extension__button' onClick={openAddEventPopup}>\r\n                Dodaj Wydarzenie\r\n            </button>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default AddButton;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { motion } from 'framer-motion';\r\nimport dayjs from 'dayjs';\r\nimport EventButton from './EventButton';\r\nimport EventDescription from './EventDescription';\r\nimport './../API/Api';\r\nimport { getDayEvents } from './../API/Api';\r\nimport AddButton from './AddButton';\r\n\r\nconst InfoPanel = () => {\r\n    const [events, setEvents] = useState([]);\r\n    const [chosenEvent, setChosenEvent] = useState();\r\n    const date = useSelector((state) => state.chosenDate);\r\n    const chosenGroup = useSelector((state) => state.chosenGroup);\r\n    const forceRefresh = useSelector((state) => state.forceEventsRefresh);\r\n    const monthNames = [\r\n        'Stycznia',\r\n        'Lutego',\r\n        'Marca',\r\n        'Kwietnia',\r\n        'Maja',\r\n        'Czerwca',\r\n        'Lipca',\r\n        'Sierpnia',\r\n        'Wrzesienia',\r\n        'Października',\r\n        'Listopada',\r\n        'Grudnia',\r\n    ];\r\n\r\n    useEffect(async () => {\r\n        setEvents([]);\r\n        getEvents();\r\n    }, [date, chosenGroup, forceRefresh]);\r\n\r\n    const getEvents = async () => {\r\n        const data = await getDayEvents(0, date);\r\n        const filteredData = data.filter(shouldBeDisplayed);\r\n        setEvents(filteredData);\r\n        setChosenEvent(filteredData[0]);\r\n    };\r\n\r\n    const shouldBeDisplayed = (event) => {\r\n        return event.group_name == 'Wszystkie' || event.group_name == chosenGroup;\r\n    };\r\n\r\n    const dayWithoutZero = () => {\r\n        let dayString = dayjs(date).format('DD');\r\n        if (dayString[0] == '0') {\r\n            dayString = dayString.slice(1, 2);\r\n        }\r\n        return dayString;\r\n    };\r\n\r\n    const containerVariants = {\r\n        hidden: { opacity: 0 },\r\n        show: {\r\n            opacity: 1,\r\n            transition: {\r\n                staggerChildren: 0.07,\r\n            },\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div className='extension'>\r\n            <motion.div className='extension__events'>\r\n                <h2 className='extension__header'>\r\n                    Wydarzenia {dayWithoutZero()} {monthNames[parseInt(dayjs(date).format('MM')) - 1]}\r\n                </h2>\r\n                <AddButton />\r\n                <motion.ul\r\n                    className='extension__events-list'\r\n                    variants={containerVariants}\r\n                    initial='hidden'\r\n                    animate={events.length > 0 && 'show'}\r\n                >\r\n                    {events.map((event) => (\r\n                        <EventButton\r\n                            key={event.id}\r\n                            event={event}\r\n                            setChosenEventLocal={setChosenEvent}\r\n                            chosenEvent={chosenEvent}\r\n                        />\r\n                    ))}\r\n                </motion.ul>\r\n            </motion.div>\r\n            <EventDescription event={chosenEvent} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InfoPanel;\r\n","import { useState, useEffect } from 'react';\r\nimport dayjs from 'dayjs';\r\nimport { motion } from 'framer-motion';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { forceEventsRefresh, setAddEventPopup, setGroup } from '../../actions';\r\nimport { getGroups, getCourses, getTypes } from '../API/Api';\r\n\r\nconst AddEventPopup = () => {\r\n    const date = useSelector((state) => state.chosenDate);\r\n    const dispatch = useDispatch();\r\n\r\n    const [courses, setCourses] = useState([]);\r\n    const [groups, setGroups] = useState([]);\r\n    const [types, setTypes] = useState([]);\r\n\r\n    const [courseID, setCourseID] = useState(0);\r\n    const [groupID, setGroupID] = useState(0);\r\n    const [typeID, setTypeID] = useState(0);\r\n    const [time, setTime] = useState('12:00');\r\n    const [description, setDescription] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    useEffect(async () => {\r\n        downloadFormData();\r\n    }, []);\r\n\r\n    const downloadFormData = async () => {\r\n        const coursesTemp = await getCourses(0);\r\n        setCourses(coursesTemp);\r\n        setCourseID(coursesTemp[0].id);\r\n\r\n        const groupsTemp = await getGroups(0);\r\n        setGroups(groupsTemp);\r\n        setGroupID(groupsTemp[0].id);\r\n\r\n        const typesTemp = await getTypes(0);\r\n        setTypes(typesTemp);\r\n        setTypeID(typesTemp[0].id);\r\n    };\r\n\r\n    const addEvent = async () => {\r\n        console.log('INSIDE ADD EVENT FUNCTION');\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                courseID: courseID,\r\n                groupID: groupID,\r\n                time: time,\r\n                date: date,\r\n                description: description,\r\n                typeID: typeID,\r\n                password: password,\r\n            }),\r\n            mode: 'no-cors', // no-cors, cors, *same-origin\r\n        };\r\n        const response = await fetch(`https://aleksanderblaszkiewicz.pl/kiedykolos/add_event.php`, requestOptions);\r\n        if (response) {\r\n            dispatch(setAddEventPopup(false));\r\n            dispatch(forceEventsRefresh());\r\n        }\r\n    };\r\n\r\n    const closePopup = () => {\r\n        dispatch(setAddEventPopup(false));\r\n    };\r\n\r\n    const updateCourseID = (e) => {\r\n        setCourseID(e.target.value);\r\n    };\r\n\r\n    const updateGroupID = (e) => {\r\n        setGroupID(e.target.value);\r\n    };\r\n\r\n    const updateTime = (e) => {\r\n        setTime(e.target.value);\r\n    };\r\n\r\n    const updateDescription = (e) => {\r\n        setDescription(e.target.value);\r\n    };\r\n\r\n    const updateTypeID = (e) => {\r\n        setTypeID(e.target.value);\r\n    };\r\n\r\n    const updatePassword = (e) => {\r\n        setPassword(e.target.value);\r\n    };\r\n\r\n    const handleAcceptClick = (e) => {\r\n        e.preventDefault();\r\n        addEvent();\r\n    };\r\n\r\n    const handleCloseClick = (e) => {\r\n        e.preventDefault();\r\n        closePopup();\r\n    };\r\n\r\n    return (\r\n        <motion.div\r\n            className='modal'\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n            transition={{ ease: [0.08, 0.75, 0.21, 0.98] }}\r\n        >\r\n            <motion.div\r\n                className='event-adder'\r\n                initial={{ scale: 0.9, opacity: 0 }}\r\n                animate={{ scale: 1, opacity: 1 }}\r\n                exit={{ scale: 0.8, opacity: 0 }}\r\n                transition={{ ease: [0.08, 0.75, 0.21, 0.98] }}\r\n            >\r\n                <h2 className='event-adder__title'>Dodawanie wydarzenia {dayjs(date).format('DD/MM/YYYY')}</h2>\r\n                <form className='event-adder__form'>\r\n                    <label className='event-adder__label' htmlFor='subject'>\r\n                        Przedmiot\r\n                    </label>\r\n                    <select className='event-adder__input' id='subject' value={courseID} onChange={updateCourseID}>\r\n                        {courses.map((course) => (\r\n                            <option key={course.id} value={course.id}>\r\n                                {course.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <label className='event-adder__label' htmlFor='group'>\r\n                        Grupa\r\n                    </label>\r\n                    <select className='event-adder__input' id='group' value={groupID} onChange={updateGroupID}>\r\n                        {groups.map((group) => (\r\n                            <option key={group.id} value={group.id}>\r\n                                {group.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <label className='event-adder__label' htmlFor='type'>\r\n                        Typ\r\n                    </label>\r\n                    <select className='event-adder__input' id='type' value={typeID} onChange={updateTypeID}>\r\n                        {types.map((type) => (\r\n                            <option key={type.id} value={type.id}>\r\n                                {type.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <div className='edition__setting'>\r\n                        <label className='edition__label' htmlFor='time'>\r\n                            Godzina\r\n                        </label>\r\n                        <input\r\n                            type='time'\r\n                            id='time'\r\n                            name='time'\r\n                            min='07:00'\r\n                            value='16:00:00'\r\n                            max='21:00'\r\n                            value={time}\r\n                            onChange={updateTime}\r\n                        ></input>\r\n                    </div>\r\n\r\n                    <div className='edition__setting'>\r\n                        <label className='edition__label' htmlFor='description'>\r\n                            Opis\r\n                        </label>\r\n                        <textarea\r\n                            id='description'\r\n                            name='description'\r\n                            rows='5'\r\n                            cols='30'\r\n                            placeholder='Tu wpisz opis...'\r\n                            value={description}\r\n                            onChange={updateDescription}\r\n                        ></textarea>\r\n                    </div>\r\n\r\n                    <div className='edition__setting submit'>\r\n                        <input\r\n                            type='password'\r\n                            id='password'\r\n                            name='password'\r\n                            placeholder='Hasło'\r\n                            onChange={updatePassword}\r\n                        ></input>\r\n                    </div>\r\n\r\n                    <div className='event-adder__buttons'>\r\n                        <button className='event-adder__button--reject' onClick={handleCloseClick}>\r\n                            Anuluj\r\n                        </button>\r\n                        <button className='event-adder__button--accept' onClick={handleAcceptClick}>\r\n                            Utwórz wydarzenie\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </motion.div>\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nexport default AddEventPopup;\r\n","import { useState, useEffect } from 'react';\r\nimport dayjs from 'dayjs';\r\nimport { motion } from 'framer-motion';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { forceEventsRefresh, setAddEventPopup, setDeleteEventPopup, setGroup } from '../../actions';\r\nimport { getGroups, getCourses, getTypes } from '../API/Api';\r\n\r\nconst DeleteEventPopup = () => {\r\n    const chosenEventID = useSelector((state) => state.chosenEvent);\r\n    const dispatch = useDispatch();\r\n\r\n    const [password, setPassword] = useState('');\r\n\r\n    const deleteEvent = async () => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ eventID: chosenEventID, password: password }),\r\n            mode: 'no-cors', // no-cors, cors, *same-origin\r\n        };\r\n        const response = await fetch(`https://aleksanderblaszkiewicz.pl/kiedykolos/delete_event.php`, requestOptions);\r\n        if (response) {\r\n            dispatch(setDeleteEventPopup(false));\r\n            dispatch(forceEventsRefresh());\r\n        }\r\n    };\r\n\r\n    const updatePassword = (e) => {\r\n        setPassword(e.target.value);\r\n    };\r\n\r\n    const closePopup = () => {\r\n        dispatch(setDeleteEventPopup(false));\r\n    };\r\n\r\n    const handleCloseClick = (e) => {\r\n        e.preventDefault();\r\n        closePopup();\r\n    };\r\n\r\n    const handleDeleteClick = (e) => {\r\n        e.preventDefault();\r\n        deleteEvent();\r\n    };\r\n\r\n    return (\r\n        <motion.div\r\n            className='modal'\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n            transition={{ ease: [0.08, 0.75, 0.21, 0.98] }}\r\n        >\r\n            <motion.div\r\n                className='event-adder'\r\n                initial={{ scale: 0.9, opacity: 0 }}\r\n                animate={{ scale: 1, opacity: 1 }}\r\n                exit={{ scale: 0.8, opacity: 0 }}\r\n                transition={{ ease: [0.08, 0.75, 0.21, 0.98] }}\r\n            >\r\n                <h2 className='event-adder__title'>Usuwanie wydarzenia {chosenEventID}</h2>\r\n                <form className='event-adder__form'>\r\n                    <div className='edition__setting submit'>\r\n                        <input\r\n                            type='password'\r\n                            id='password'\r\n                            name='password'\r\n                            placeholder='Hasło'\r\n                            onChange={updatePassword}\r\n                        ></input>\r\n                    </div>\r\n\r\n                    <div className='event-adder__buttons'>\r\n                        <button className='event-adder__button--reject' onClick={handleCloseClick}>\r\n                            Anuluj\r\n                        </button>\r\n                        <button className='event-adder__button--accept' onClick={handleDeleteClick}>\r\n                            Usuń wydarzenie\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </motion.div>\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nexport default DeleteEventPopup;\r\n","import React from 'react';\r\nimport Calendar from './Calendar/Calendar';\r\nimport InfoPanel from './RightPanel/InfoPanel';\r\nimport { useSelector } from 'react-redux';\r\nimport AddEventPopup from './Popups/AddEventPopup';\r\nimport { AnimatePresence } from 'framer-motion';\r\nimport DeleteEventPopup from './Popups/DeleteEventPopup';\r\n\r\nconst UserPanel = () => {\r\n    const addEventPopupEnabled = useSelector((state) => state.addEventPopup);\r\n    const deleteEventPopupEnabled = useSelector((state) => state.deleteEventPopup);\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='app'>\r\n                <Calendar />\r\n                <InfoPanel />\r\n            </div>\r\n            <AnimatePresence>{addEventPopupEnabled && <AddEventPopup />}</AnimatePresence>\r\n            <AnimatePresence>{deleteEventPopupEnabled && <DeleteEventPopup />}</AnimatePresence>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserPanel;\r\n","import './App.css';\r\nimport AdminPanel from \"./components/AdminPanel\";\r\nimport UserPanel from \"./components/UserPanel\";\r\n\r\nimport { Route, Switch } from \"react-router\";\r\n\r\nconst App = () => {\r\n    return  (\r\n        <Switch>\r\n            <Route path=\"/\" exact component={UserPanel}/>\r\n            <Route path=\"/admin\" exact component={AdminPanel}/>\r\n        </Switch> \r\n    )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const dateReducer = (state = \"2020-11-01\", action) => {\r\n    switch(action.type) {\r\n        case 'SET_DATE':\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default dateReducer;","const groupReducer = (state = \"Grupa 1\", action) => {\r\n    switch(action.type) {\r\n        case 'SET_GROUP':\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default groupReducer;","const chosenEventAdminReducer = (state = 0, action) => {\r\n    switch (action.type) {\r\n        case 'SET_EVENT':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default chosenEventAdminReducer;\r\n","const editModeReducer = (state = false, action) => {\r\n    switch(action.type) {\r\n        case 'EDIT_ENABLE':\r\n            return true\r\n        case 'EDIT_DISABLE':\r\n            return false\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default editModeReducer;","const addEventPopupReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case 'SET_ADD_EVENT_POPUP':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default addEventPopupReducer;\r\n","const forceEventsRefreshReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case 'REFRESH':\r\n            return !state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default forceEventsRefreshReducer;\r\n","const deleteEventPopupReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case 'SET_DELETE_EVENT_POPUP':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default deleteEventPopupReducer;\r\n","const chosenEventReducer = (state = 0, action) => {\r\n    switch (action.type) {\r\n        case 'SET_CHOSEN_EVENT':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default chosenEventReducer;\r\n","import dateReducer from './chosenDate';\r\nimport groupReducer from './chosenGroup';\r\nimport chosenEventAdminReducer from './chosenEventAdmin';\r\nimport { combineReducers } from 'redux';\r\nimport editModeReducer from './editModeReducer';\r\nimport addEventPopupReducer from './addEventPopup';\r\nimport forceEventsRefreshReducer from './forceEventsRefresh';\r\nimport deleteEventPopupReducer from './deleteEventPopup';\r\nimport chosenEventReducer from './chosenEvent';\r\n\r\nconst allReducers = combineReducers({\r\n    chosenDate: dateReducer,\r\n    chosenGroup: groupReducer,\r\n    chosenEventAdmin: chosenEventAdminReducer,\r\n    editEnabled: editModeReducer,\r\n    addEventPopup: addEventPopupReducer,\r\n    deleteEventPopup: deleteEventPopupReducer,\r\n    forceEventsRefresh: forceEventsRefreshReducer,\r\n    chosenEvent: chosenEventReducer,\r\n});\r\n\r\nexport default allReducers;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { createStore } from 'redux';\r\nimport allReducer from './reducers';\r\nimport { Provider } from 'react-redux';\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { loadState, saveState } from './storage/localStorage';\r\n\r\nconst persistedStore = loadState();\r\nconst store = createStore(\r\n    allReducer,\r\n    persistedStore,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  );\r\n\r\nstore.subscribe(() => {\r\n  saveState({\r\n    chosenGroup: store.getState().chosenGroup\r\n  });\r\n});\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <HashRouter basename=\"/\">\r\n        <App />\r\n      </HashRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n","export const loadState = () => {\r\n    try {\r\n        const serializedState = localStorage.getItem('state');\r\n        if (serializedState === null) return undefined;\r\n        return JSON.parse(serializedState);\r\n    } catch (err) {\r\n        return undefined;\r\n    }\r\n};\r\n\r\nexport const saveState = (state) => {\r\n    try {\r\n        localStorage.setItem('state', JSON.stringify(state));\r\n    } catch {}\r\n};\r\n"],"sourceRoot":""}