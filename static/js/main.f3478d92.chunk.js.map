{"version":3,"sources":["actions/index.js","components/Calendar/CalendarCard.js","components/Calendar/CalendarTools.js","components/Calendar/WeekDays.js","components/API/Api.js","components/Calendar/MonthTitle.js","components/Calendar/Calendar.js","components/RightPanel/EventButton.js","components/RightPanel/AddButton.js","components/RightPanel/InfoPanel.js","components/Popups/AddEventPopup.js","components/Popups/DeleteEventPopup.js","components/Popups/EditEventPopup.js","components/UserPanel.js","App.js","reportWebVitals.js","reducers/chosenDate.js","reducers/chosenGroup.js","reducers/addEventPopup.js","reducers/forceEventsRefresh.js","reducers/deleteEventPopup.js","reducers/chosenEvent.js","reducers/chosenTheme.js","reducers/editEventPopup.js","reducers/index.js","index.js","storage/localStorage.js"],"names":["setDate","value","type","payload","setAddEventPopup","setEditEventPopup","setDeleteEventPopup","setChosenEvent","setChosenTheme","CalendarCard","cardDate","isInCurrentMonth","events","dispatch","useDispatch","chosenDate","useSelector","state","div","className","styleText","dayjs","day","format","style","data-date","tabindex","onClick","whileHover","y","scale","whileTap","map","event","index","Event","Kolokwium","Projekt","Egzamin","Laboratorium","Inne","short_name","toUpperCase","id","CalendarTools","useState","settingsVisible","SetSettingsVisible","chosenTheme","useEffect","document","body","dataset","theme","button","Settings","chosenGroup","name","themeButtonStyle","buttonValue","groups","i","push","li","initial","opacity","animate","exit","transition","stiffness","damping","WeekDays","item","hidden","x","show","calendarDays","variants","ul","staggerChildren","getAllEvents","a","fetch","response","json","data","getDayEvents","date","URL","getGroups","getCourses","getTypes","MonthTitle","month","swipeDirection","h2","Calendar","setEvents","days","setDays","setMonth","monthOffset","setMonthOffset","setSwipeDirection","forceRefresh","forceEventsRefresh","daysOfWeek","today","parseInt","initializeMonthDays","getEvents","filteredData","filter","shouldBeDisplayed","group_name","offset","desiredDay","add","daysTemp","Array","startDayOfMonth","startOf","startingDay","subtract","getEventsForDay","eventDay","isDayInCurrentMonth","thisMonth","calendarRowVariants","rows","reduce","r","element","length","rowContent","decreaseMonth","increaseMonth","EventButton","setChosenEventLocal","chosenEvent","editEventDate","newDate","console","log","downloadedEvent","groupID","requestOptions","method","headers","JSON","stringify","eventID","courseID","course_id","group_id","time","description","typeID","type_id","password","mode","drag","dragConstraints","top","right","bottom","left","dragElastic","dragTransition","bounceStiffness","bounceDamping","onDragEnd","mouseEvent","info","target","closest","slice","AddButton","InfoPanel","dayString","dayWithoutZero","AddEventPopup","courses","setCourses","setGroups","types","setTypes","setCourseID","setGroupID","setTypeID","setTime","setDescription","setPassword","downloadFormData","coursesTemp","groupsTemp","typesTemp","addEvent","ease","htmlFor","onChange","e","course","group","min","max","cols","placeholder","preventDefault","DeleteEventPopup","chosenEventID","deleteEvent","EditEventPopup","setEvent","getEventInfo","undefined","initializeEventInfo","editEvent","UserPanel","addEventPopupEnabled","addEventPopup","deleteEventPopupEnabled","deleteEventPopup","editEventPopupEnabled","editEventPopup","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","dateReducer","action","groupReducer","addEventPopupReducer","forceEventsRefreshReducer","deleteEventPopupReducer","chosenEventReducer","chosenThemeReducer","editEventPopupReducer","allReducers","combineReducers","persistedStore","serializedState","localStorage","getItem","parse","err","loadState","store","createStore","allReducer","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","setItem","saveState","getState","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.f3478d92.chunk.js","sourcesContent":["export const setDate = (value) => {\r\n    return {\r\n        type: 'SET_DATE',\r\n        payload: value,\r\n    };\r\n};\r\n\r\nexport const setGroup = (value) => {\r\n    return {\r\n        type: 'SET_GROUP',\r\n        payload: value,\r\n    };\r\n};\r\n\r\nexport const setAddEventPopup = (value) => {\r\n    return {\r\n        type: 'SET_ADD_EVENT_POPUP',\r\n        payload: value,\r\n    };\r\n};\r\n\r\nexport const setEditEventPopup = (value) => {\r\n    return {\r\n        type: 'SET_EDIT_EVENT_POPUP',\r\n        payload: value,\r\n    };\r\n};\r\n\r\nexport const setDeleteEventPopup = (value) => {\r\n    return {\r\n        type: 'SET_DELETE_EVENT_POPUP',\r\n        payload: value,\r\n    };\r\n};\r\n\r\nexport const forceEventsRefresh = () => {\r\n    return {\r\n        type: 'REFRESH',\r\n    };\r\n};\r\n\r\nexport const setChosenEvent = (value) => {\r\n    return {\r\n        type: 'SET_CHOSEN_EVENT',\r\n        payload: value,\r\n    };\r\n};\r\n\r\nexport const setChosenTheme = (value) => {\r\n    return {\r\n        type: 'SET_CHOSEN_THEME',\r\n        payload: value,\r\n    };\r\n};\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setAddEventPopup, setDate } from '../../actions';\r\nimport { motion } from 'framer-motion';\r\nimport dayjs from 'dayjs';\r\n\r\nconst CalendarCard = ({ cardDate, isInCurrentMonth, events }) => {\r\n    const dispatch = useDispatch();\r\n    const chosenDate = useSelector((state) => state.chosenDate);\r\n\r\n    const onCallendarCardClicked = () => {\r\n        dispatch(setDate(cardDate));\r\n    };\r\n\r\n    const style = () => {\r\n        let styleText = '';\r\n\r\n        if (!isInCurrentMonth) {\r\n            return 'day--inactive ';\r\n        }\r\n\r\n        if (cardDate === chosenDate) {\r\n            styleText += 'day--selected ';\r\n        }\r\n\r\n        if (dayjs(cardDate).day() === 0 || dayjs(cardDate).day() === 6) {\r\n            styleText += 'day--weekend ';\r\n        }\r\n\r\n        if (dayjs(cardDate).format('DD-MM-YYYY') === dayjs().format('DD-MM-YYYY')) {\r\n            styleText += 'day--current ';\r\n        }\r\n\r\n        return styleText;\r\n    };\r\n\r\n    return (\r\n        <motion.div\r\n            className={'day ' + style()}\r\n            data-date={dayjs(cardDate).format('DD-MM-YYYY')}\r\n            tabindex='0'\r\n            onClick={onCallendarCardClicked}\r\n            whileHover={{ y: -2, scale: 1.05 }}\r\n            whileTap={{ y: 0, scale: 0.95 }}\r\n        >\r\n            <div className='day__flags'>\r\n                <ul className='day__flags-list'>\r\n                    {events.map((event, index) => (\r\n                        <Event key={index} event={event} />\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <div className='day__number'>{dayjs(cardDate).format('DD')}</div>\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nexport default CalendarCard;\r\n\r\nconst Event = ({ event }) => {\r\n    const styles = {\r\n        Kolokwium: 'day__flag--exam',\r\n        Projekt: 'day__flag--project',\r\n        Egzamin: 'day__flag--exam',\r\n        Laboratorium: 'day__flag--lab',\r\n        Inne: 'day__flag--other',\r\n    };\r\n\r\n    return (\r\n        <li className={'day__flag ' + styles[event.type]} key={event.id}>\r\n            {event.short_name.toUpperCase()}\r\n        </li>\r\n    );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setChosenTheme, setGroup } from '../../actions';\r\n\r\nconst CalendarTools = () => {\r\n    const [settingsVisible, SetSettingsVisible] = useState(false);\r\n    const chosenTheme = useSelector((state) => state.chosenTheme);\r\n\r\n    useEffect(() => {\r\n        document.body.dataset.theme = chosenTheme;\r\n    }, [chosenTheme]);\r\n\r\n    const toggleVisible = () => {\r\n        SetSettingsVisible(!settingsVisible);\r\n    };\r\n\r\n    return (\r\n        <div className='calendar__options'>\r\n            <button className='button button--notifications'>\r\n                <div className='button__counter'>1</div>\r\n            </button>\r\n            <motion.button\r\n                className='button button--settings'\r\n                onClick={toggleVisible}\r\n                whileTap={{ scale: 0.9 }}\r\n                whileHover={{ scale: 1.1 }}\r\n            />\r\n            <AnimatePresence>{settingsVisible && <Settings />}</AnimatePresence>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CalendarTools;\r\n\r\nconst Settings = () => {\r\n    const dispatch = useDispatch();\r\n    const chosenGroup = useSelector((state) => state.chosenGroup);\r\n    const chosenTheme = useSelector((state) => state.chosenTheme);\r\n\r\n    const setGroupGlobal = (name) => {\r\n        dispatch(setGroup(name));\r\n    };\r\n\r\n    const style = (name) => {\r\n        if (name === chosenGroup) return ' calendar__setting-option--selected-solid ';\r\n    };\r\n\r\n    const changeToWhiteTheme = () => {\r\n        dispatch(setChosenTheme('light'));\r\n    };\r\n\r\n    const changeToDarkTheme = () => {\r\n        dispatch(setChosenTheme('dark'));\r\n    };\r\n\r\n    const themeButtonStyle = (buttonValue) => {\r\n        if (buttonValue == chosenTheme) {\r\n            return ' calendar__setting-option--selected';\r\n        } else return '';\r\n    };\r\n\r\n    const groups = [];\r\n    for (let i = 1; i < 7; i++) {\r\n        groups.push(\r\n            <motion.li\r\n                key={i}\r\n                className={'calendar__setting-option ' + style(`Grupa ${i}`)}\r\n                whileTap={{ scale: 0.9, y: 0 }}\r\n                whileHover={{ scale: 1.1, y: -5 }}\r\n                onClick={() => setGroupGlobal(`Grupa ${i}`)}\r\n            >\r\n                {i}\r\n            </motion.li>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <motion.div\r\n            className='calendar__settings'\r\n            initial={{ opacity: 0, y: -100, scale: 0 }}\r\n            animate={{ opacity: 1, y: 0, scale: 1 }}\r\n            exit={{ opacity: 0, y: -100, scale: 0 }}\r\n            transition={{ type: 'spring', stiffness: 600, damping: 50 }}\r\n        >\r\n            <div className='calendar__setting'>\r\n                <h3 className='calendar__setting-name'>Grupa</h3>\r\n                <ul className='calendar__setting-list'>{groups}</ul>\r\n            </div>\r\n            <div className='calendar__setting'>\r\n                <h3 className='calendar__setting-name'>Motyw</h3>\r\n                <ul className='calendar__setting-list'>\r\n                    <div\r\n                        className={'calendar__setting-option calendar__setting-option--dark' + themeButtonStyle('dark')}\r\n                        onClick={changeToDarkTheme}\r\n                    ></div>\r\n                    <div\r\n                        className={\r\n                            'calendar__setting-option calendar__setting-option--light' + themeButtonStyle('light')\r\n                        }\r\n                        onClick={changeToWhiteTheme}\r\n                    ></div>\r\n                </ul>\r\n            </div>\r\n        </motion.div>\r\n    );\r\n};\r\n","import { motion } from 'framer-motion';\r\n\r\nconst WeekDays = () => {\r\n    const container = {\r\n        hidden: { opacity: 0 },\r\n        show: {\r\n            opacity: 1,\r\n            transition: {\r\n                staggerChildren: 0.05,\r\n            },\r\n        },\r\n    };\r\n    const item = {\r\n        hidden: { opacity: 0, x: -25 },\r\n        show: { opacity: 1, x: 0 },\r\n    };\r\n\r\n    const calendarDays = ['pon.', 'wt.', 'śr.', 'czw.', 'pt.', 'sb.', 'ndz.'].map((day) => {\r\n        return (\r\n            <motion.li key={day} className='calendar__names-item' variants={item}>\r\n                {day}\r\n            </motion.li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className='calendar__names'>\r\n            <motion.ul className='calendar__names-list' variants={container} initial='hidden' animate='show'>\r\n                {calendarDays}\r\n            </motion.ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WeekDays;\r\n","import { useDispatch } from 'react-redux';\r\nimport { forceEventsRefresh } from '../../actions';\r\n\r\nexport const getAllEvents = async (id) => {\r\n    const URL = `https://aleksanderblaszkiewicz.pl/kiedykolos/get_events.php`;\r\n\r\n    const response = await fetch(URL);\r\n    const data = await response.json();\r\n\r\n    return data;\r\n};\r\n\r\nexport const getDayEvents = async (id, date) => {\r\n    const URL = `https://aleksanderblaszkiewicz.pl/kiedykolos/get_events_for_day.php?date=${date}`;\r\n\r\n    const response = await fetch(URL);\r\n    const data = await response.json();\r\n\r\n    return data;\r\n};\r\n\r\nexport const getGroups = async (id) => {\r\n    const URL = `https://aleksanderblaszkiewicz.pl/kiedykolos/get_groups.php`;\r\n\r\n    const response = await fetch(URL);\r\n    const data = await response.json();\r\n\r\n    return data;\r\n};\r\n\r\nexport const getCourses = async (id) => {\r\n    const URL = `https://aleksanderblaszkiewicz.pl/kiedykolos/get_courses.php`;\r\n\r\n    const response = await fetch(URL);\r\n    const data = await response.json();\r\n\r\n    return data;\r\n};\r\n\r\nexport const getTypes = async (id) => {\r\n    const URL = `https://aleksanderblaszkiewicz.pl/kiedykolos/get_types.php`;\r\n\r\n    const response = await fetch(URL);\r\n    const data = await response.json();\r\n\r\n    return data;\r\n};\r\n","import { motion } from 'framer-motion';\r\n\r\nconst MonthTitle = ({ month, swipeDirection }) => {\r\n    const monthsWords = [\r\n        'Styczeń',\r\n        'Luty',\r\n        'Marzec',\r\n        'Kwiecień',\r\n        'Maj',\r\n        'Czerwiec',\r\n        'Lipiec',\r\n        'Sierpień',\r\n        'Wrzesień',\r\n        'Październik',\r\n        'Listopad',\r\n        'Grudzień',\r\n    ];\r\n\r\n    return (\r\n        <motion.h2\r\n            key={month}\r\n            className='calendar__title'\r\n            initial={{ x: swipeDirection * 50 }}\r\n            animate={{ x: 0 }}\r\n            transition={{ type: 'spring', stiffness: 600, damping: 50 }}\r\n        >\r\n            {monthsWords[month - 1]}\r\n        </motion.h2>\r\n    );\r\n};\r\n\r\nexport default MonthTitle;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { motion } from 'framer-motion';\r\nimport dayjs from 'dayjs';\r\nimport { setDate } from '../../actions';\r\nimport CalendarCard from './CalendarCard';\r\nimport CalendarTools from './CalendarTools';\r\nimport WeekDays from './WeekDays';\r\nimport './../API/Api';\r\nimport { getAllEvents } from './../API/Api';\r\nimport MonthTitle from './MonthTitle';\r\n\r\nconst Calendar = () => {\r\n    const [events, setEvents] = useState([]);\r\n    const [days, setDays] = useState([]);\r\n    const [month, setMonth] = useState();\r\n    const [monthOffset, setMonthOffset] = useState(0);\r\n    const [swipeDirection, setSwipeDirection] = useState(1);\r\n\r\n    const dispatch = useDispatch();\r\n    const chosenGroup = useSelector((state) => state.chosenGroup);\r\n    const forceRefresh = useSelector((state) => state.forceEventsRefresh);\r\n\r\n    const daysOfWeek = [7, 1, 2, 3, 4, 5, 6];\r\n\r\n    let today = dayjs();\r\n\r\n    useEffect(() => {\r\n        setMonth(parseInt(today.format('MM')));\r\n        dispatch(setDate(today.format('YYYY-MM-DD')));\r\n\r\n        initializeMonthDays(0);\r\n        getEvents();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getEvents();\r\n    }, [chosenGroup, forceRefresh]);\r\n\r\n    const getEvents = async () => {\r\n        const data = await getAllEvents();\r\n        const filteredData = data.filter(shouldBeDisplayed);\r\n        setEvents(filteredData);\r\n    };\r\n\r\n    const increaseMonth = () => {\r\n        setSwipeDirection(1);\r\n        const offset = monthOffset + 1;\r\n        setMonthOffset(offset);\r\n        setMonth(parseInt(today.add(offset, 'month').format('MM')));\r\n        initializeMonthDays(offset);\r\n    };\r\n\r\n    const decreaseMonth = () => {\r\n        setSwipeDirection(-1);\r\n        const offset = monthOffset - 1;\r\n        setMonthOffset(offset);\r\n        setMonth(parseInt(today.add(offset, 'month').format('MM')));\r\n        initializeMonthDays(offset);\r\n    };\r\n\r\n    const shouldBeDisplayed = (event) => {\r\n        return event.group_name === 'Wszystkie' || event.group_name === chosenGroup;\r\n    };\r\n\r\n    const initializeMonthDays = (offset) => {\r\n        const desiredDay = today.add(offset, 'month');\r\n        const daysTemp = new Array(42);\r\n        const startDayOfMonth = daysOfWeek[desiredDay.startOf('month').day()]; // 1 - monday, 7 sunday\r\n\r\n        const startingDay = desiredDay.startOf('month').subtract(startDayOfMonth - 1, 'day');\r\n\r\n        for (let i = 0; i < 42; i++) daysTemp[i] = startingDay.add(i, 'day').format('YYYY-MM-DD');\r\n\r\n        setDays(daysTemp);\r\n    };\r\n\r\n    const getEventsForDay = (day) => {\r\n        return events.filter((eventDay) => eventDay.date === day);\r\n    };\r\n\r\n    const isDayInCurrentMonth = (day) => {\r\n        const thisMonth = today.add(monthOffset, 'month');\r\n        return dayjs(day).format('MM') === thisMonth.format('MM');\r\n    };\r\n\r\n    const calendarRowVariants = {\r\n        hidden: { opacity: 0, x: swipeDirection * 100 },\r\n        show: {\r\n            opacity: 1,\r\n            x: 0,\r\n            transition: {\r\n                type: 'spring',\r\n                stiffness: 600,\r\n                damping: 50,\r\n            },\r\n        },\r\n    };\r\n\r\n    var rows = days\r\n        .map((day) => (\r\n            <CalendarCard\r\n                key={day}\r\n                isInCurrentMonth={isDayInCurrentMonth(day)}\r\n                cardDate={day}\r\n                events={getEventsForDay(day)}\r\n                swipeDirection={swipeDirection}\r\n            />\r\n        ))\r\n        .reduce((r, element, index) => {\r\n            index % 7 === 0 && r.push([]);\r\n            r[r.length - 1].push(element);\r\n            return r;\r\n        }, [])\r\n        .map((rowContent, index) => (\r\n            <div key={month + index} className='calendar__row'>\r\n                {rowContent}\r\n            </div>\r\n        ));\r\n\r\n    return (\r\n        <div className='calendar'>\r\n            <div className='calendar__header'>\r\n                <button className='button button--previous' onClick={() => decreaseMonth()}></button>\r\n                <MonthTitle month={month} swipeDirection={swipeDirection} />\r\n                <button className='button button--next' onClick={() => increaseMonth()}></button>\r\n            </div>\r\n            <CalendarTools />\r\n            <WeekDays />\r\n            <motion.div\r\n                className='calendar__days'\r\n                key={month}\r\n                initial='hidden'\r\n                animate='show'\r\n                variants={calendarRowVariants}\r\n            >\r\n                {rows}\r\n            </motion.div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Calendar;\r\n","import dayjs from 'dayjs';\r\nimport { motion } from 'framer-motion';\r\nimport { useDispatch } from 'react-redux';\r\nimport { forceEventsRefresh, setChosenEvent, setDeleteEventPopup, setEditEventPopup } from '../../actions';\r\n\r\nconst EventButton = ({ event, setChosenEventLocal, chosenEvent }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const editEventDate = async (newDate) => {\r\n        console.log('Got date: ' + newDate);\r\n        const response = await fetch(\r\n            `https://aleksanderblaszkiewicz.pl/kiedykolos/get_event_details.php?id=${event.id}`\r\n        );\r\n        const data = await response.json();\r\n        const downloadedEvent = data[0];\r\n        console.log(downloadedEvent);\r\n        console.log(downloadedEvent.groupID);\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                eventID: downloadedEvent.id,\r\n                courseID: downloadedEvent.course_id,\r\n                groupID: downloadedEvent.group_id,\r\n                time: downloadedEvent.time,\r\n                date: dayjs(newDate).format('YYYY-DD-MM'),\r\n                description: downloadedEvent.description,\r\n                typeID: downloadedEvent.type_id,\r\n                password: 'TomaszDziubich321!',\r\n            }),\r\n            mode: 'no-cors', // no-cors, cors, *same-origin\r\n        };\r\n        await fetch(`https://aleksanderblaszkiewicz.pl/kiedykolos/edit_event.php`, requestOptions);\r\n        dispatch(forceEventsRefresh());\r\n    };\r\n\r\n    const item = {\r\n        hidden: { opacity: 0, y: 50 },\r\n        show: {\r\n            opacity: 1,\r\n            y: 0,\r\n            transition: {\r\n                type: 'spring',\r\n                stiffness: 600,\r\n                damping: 50,\r\n            },\r\n        },\r\n    };\r\n    const style = () => {\r\n        let styleText = '';\r\n        const styles = {\r\n            Kolokwium: '--red',\r\n            Projekt: '--green',\r\n            Egzamin: '--red',\r\n            Laboratorium: '--blue',\r\n            Inne: '--yellow',\r\n        };\r\n        styleText += styles[event.type];\r\n\r\n        return styleText;\r\n    };\r\n\r\n    const deleteEventClicked = () => {\r\n        dispatch(setDeleteEventPopup(true));\r\n        dispatch(setChosenEvent(event.id));\r\n    };\r\n\r\n    const editEventClicked = () => {\r\n        dispatch(setEditEventPopup(true));\r\n        dispatch(setChosenEvent(event));\r\n    };\r\n\r\n    return (\r\n        <motion.li\r\n            key={event.id}\r\n            className='event'\r\n            variants={item}\r\n            whileTap={{ scale: 0.98 }}\r\n            whileHover={{ scale: 1.02 }}\r\n            onClick={() => setChosenEventLocal(event)}\r\n            drag\r\n            dragConstraints={{ top: 0, right: 0, bottom: 0, left: 0 }}\r\n            dragElastic={1}\r\n            dragTransition={{ bounceStiffness: 600, bounceDamping: 30 }}\r\n            onDragEnd={(mouseEvent, info) => editEventDate(mouseEvent.target.closest('.day').dataset.date)}\r\n        >\r\n            <div className={'event__topbar event__topbar' + style()}>\r\n                <h3 className='event__title'>{event.name}</h3>\r\n                <button className='event__editor' onClick={editEventClicked}></button>\r\n                <button className='event__deleter' onClick={deleteEventClicked}></button>\r\n            </div>\r\n            <div className='event__panel'>\r\n                <div className='event__tags'>\r\n                    <div className='event__tag event__tag--type'>{event.type}</div>\r\n                    <div className='event__tag event__tag--time'>{event.time.slice(0, 5)}</div>\r\n                    <div className='event__tag event__tag--info'>Informacja</div>\r\n                </div>\r\n                <div className='event__description'>{event.description}</div>\r\n            </div>\r\n        </motion.li>\r\n    );\r\n};\r\n\r\nexport default EventButton;\r\n","import { useDispatch } from 'react-redux';\r\nimport { setAddEventPopup } from '../../actions';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst AddButton = () => {\r\n    const dispatch = useDispatch();\r\n    const openAddEventPopup = () => {\r\n        dispatch(setAddEventPopup(true));\r\n    };\r\n\r\n    return (\r\n        <motion.div className='event--adder' whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\r\n            <button className='extension__button' onClick={openAddEventPopup}>\r\n                Dodaj Wydarzenie\r\n            </button>\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nexport default AddButton;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { motion } from 'framer-motion';\r\nimport dayjs from 'dayjs';\r\nimport EventButton from './EventButton';\r\nimport './../API/Api';\r\nimport { getDayEvents } from './../API/Api';\r\nimport AddButton from './AddButton';\r\n\r\nconst InfoPanel = () => {\r\n    const [events, setEvents] = useState([]);\r\n    const [chosenEvent, setChosenEvent] = useState();\r\n    const date = useSelector((state) => state.chosenDate);\r\n    const chosenGroup = useSelector((state) => state.chosenGroup);\r\n    const forceRefresh = useSelector((state) => state.forceEventsRefresh);\r\n    const monthNames = [\r\n        'Stycznia',\r\n        'Lutego',\r\n        'Marca',\r\n        'Kwietnia',\r\n        'Maja',\r\n        'Czerwca',\r\n        'Lipca',\r\n        'Sierpnia',\r\n        'Wrzesienia',\r\n        'Października',\r\n        'Listopada',\r\n        'Grudnia',\r\n    ];\r\n\r\n    useEffect(async () => {\r\n        setEvents([]);\r\n        getEvents();\r\n    }, [date, chosenGroup, forceRefresh]);\r\n\r\n    const getEvents = async () => {\r\n        const data = await getDayEvents(0, date);\r\n        const filteredData = data.filter(shouldBeDisplayed);\r\n        setEvents(filteredData);\r\n        setChosenEvent(filteredData[0]);\r\n    };\r\n\r\n    const shouldBeDisplayed = (event) => {\r\n        return (\r\n            event.group_name == 'Wszystkie' || event.group_name == chosenGroup\r\n        );\r\n    };\r\n\r\n    const dayWithoutZero = () => {\r\n        let dayString = dayjs(date).format('DD');\r\n        if (dayString[0] == '0') {\r\n            dayString = dayString.slice(1, 2);\r\n        }\r\n        return dayString;\r\n    };\r\n\r\n    const containerVariants = {\r\n        hidden: { opacity: 0 },\r\n        show: {\r\n            opacity: 1,\r\n            transition: {\r\n                staggerChildren: 0.07,\r\n            },\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div className='extension'>\r\n            <motion.div className='extension__events'>\r\n                <h2 className='extension__header'>\r\n                    Wydarzenia {dayWithoutZero()}{' '}\r\n                    {monthNames[parseInt(dayjs(date).format('MM')) - 1]}\r\n                </h2>\r\n                <AddButton />\r\n                <motion.ul\r\n                    className='events-list'\r\n                    variants={containerVariants}\r\n                    initial='hidden'\r\n                    animate={events.length > 0 && 'show'}\r\n                >\r\n                    {events.map((event) => (\r\n                        <EventButton\r\n                            key={event.id}\r\n                            event={event}\r\n                            setChosenEventLocal={setChosenEvent}\r\n                            chosenEvent={chosenEvent}\r\n                        />\r\n                    ))}\r\n                </motion.ul>\r\n            </motion.div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InfoPanel;\r\n","import { useState, useEffect } from 'react';\r\nimport dayjs from 'dayjs';\r\nimport { motion } from 'framer-motion';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { forceEventsRefresh, setAddEventPopup, setGroup } from '../../actions';\r\nimport { getGroups, getCourses, getTypes } from '../API/Api';\r\n\r\nconst AddEventPopup = () => {\r\n    const date = useSelector((state) => state.chosenDate);\r\n    const dispatch = useDispatch();\r\n\r\n    const [courses, setCourses] = useState([]);\r\n    const [groups, setGroups] = useState([]);\r\n    const [types, setTypes] = useState([]);\r\n\r\n    const [courseID, setCourseID] = useState(0);\r\n    const [groupID, setGroupID] = useState(0);\r\n    const [typeID, setTypeID] = useState(0);\r\n    const [time, setTime] = useState('12:00');\r\n    const [description, setDescription] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    useEffect(async () => {\r\n        downloadFormData();\r\n    }, []);\r\n\r\n    const downloadFormData = async () => {\r\n        const coursesTemp = await getCourses(0);\r\n        setCourses(coursesTemp);\r\n        setCourseID(coursesTemp[0].id);\r\n\r\n        const groupsTemp = await getGroups(0);\r\n        setGroups(groupsTemp);\r\n        setGroupID(groupsTemp[0].id);\r\n\r\n        const typesTemp = await getTypes(0);\r\n        setTypes(typesTemp);\r\n        setTypeID(typesTemp[0].id);\r\n    };\r\n\r\n    const addEvent = async () => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                courseID: courseID,\r\n                groupID: groupID,\r\n                time: time,\r\n                date: date,\r\n                description: description,\r\n                typeID: typeID,\r\n                password: password,\r\n            }),\r\n            mode: 'no-cors', // no-cors, cors, *same-origin\r\n        };\r\n        const response = await fetch(`https://aleksanderblaszkiewicz.pl/kiedykolos/add_event.php`, requestOptions);\r\n        if (response) {\r\n            dispatch(setAddEventPopup(false));\r\n            dispatch(forceEventsRefresh());\r\n        }\r\n    };\r\n\r\n    const closePopup = () => {\r\n        dispatch(setAddEventPopup(false));\r\n    };\r\n\r\n    const updateCourseID = (e) => {\r\n        setCourseID(e.target.value);\r\n    };\r\n\r\n    const updateGroupID = (e) => {\r\n        setGroupID(e.target.value);\r\n    };\r\n\r\n    const updateTime = (e) => {\r\n        setTime(e.target.value);\r\n    };\r\n\r\n    const updateDescription = (e) => {\r\n        setDescription(e.target.value);\r\n    };\r\n\r\n    const updateTypeID = (e) => {\r\n        setTypeID(e.target.value);\r\n    };\r\n\r\n    const updatePassword = (e) => {\r\n        setPassword(e.target.value);\r\n    };\r\n\r\n    const handleAcceptClick = (e) => {\r\n        e.preventDefault();\r\n        addEvent();\r\n    };\r\n\r\n    const handleCloseClick = (e) => {\r\n        e.preventDefault();\r\n        closePopup();\r\n    };\r\n\r\n    return (\r\n        <motion.div\r\n            className='modal'\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n            transition={{ ease: [0.08, 0.75, 0.21, 0.98] }}\r\n        >\r\n            <motion.div\r\n                className='event-adder'\r\n                initial={{ scale: 0.9, opacity: 0 }}\r\n                animate={{ scale: 1, opacity: 1 }}\r\n                exit={{ scale: 0.8, opacity: 0 }}\r\n                transition={{ ease: [0.08, 0.75, 0.21, 0.98] }}\r\n            >\r\n                <h2 className='event-adder__title'>Dodawanie wydarzenia {dayjs(date).format('DD/MM/YYYY')}</h2>\r\n                <form className='event-adder__form'>\r\n                    <label className='event-adder__label' htmlFor='subject'>\r\n                        Przedmiot\r\n                    </label>\r\n                    <select className='event-adder__input' id='subject' value={courseID} onChange={updateCourseID}>\r\n                        {courses.map((course) => (\r\n                            <option key={course.id} value={course.id}>\r\n                                {course.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <label className='event-adder__label' htmlFor='group'>\r\n                        Grupa\r\n                    </label>\r\n                    <select className='event-adder__input' id='group' value={groupID} onChange={updateGroupID}>\r\n                        {groups.map((group) => (\r\n                            <option key={group.id} value={group.id}>\r\n                                {group.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <label className='event-adder__label' htmlFor='type'>\r\n                        Typ\r\n                    </label>\r\n                    <select className='event-adder__input' id='type' value={typeID} onChange={updateTypeID}>\r\n                        {types.map((type) => (\r\n                            <option key={type.id} value={type.id}>\r\n                                {type.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <div className='edition__setting'>\r\n                        <label className='edition__label' htmlFor='time'>\r\n                            Godzina\r\n                        </label>\r\n                        <input\r\n                            type='time'\r\n                            id='time'\r\n                            name='time'\r\n                            min='07:00'\r\n                            value='16:00:00'\r\n                            max='21:00'\r\n                            value={time}\r\n                            onChange={updateTime}\r\n                        ></input>\r\n                    </div>\r\n\r\n                    <div className='edition__setting'>\r\n                        <label className='edition__label' htmlFor='description'>\r\n                            Opis\r\n                        </label>\r\n                        <textarea\r\n                            id='description'\r\n                            name='description'\r\n                            rows='5'\r\n                            cols='30'\r\n                            placeholder='Tu wpisz opis...'\r\n                            value={description}\r\n                            onChange={updateDescription}\r\n                        ></textarea>\r\n                    </div>\r\n\r\n                    <div className='edition__setting submit'>\r\n                        <input\r\n                            type='password'\r\n                            id='password'\r\n                            name='password'\r\n                            placeholder='Hasło'\r\n                            onChange={updatePassword}\r\n                        ></input>\r\n                    </div>\r\n\r\n                    <div className='event-adder__buttons'>\r\n                        <button className='event-adder__button--reject' onClick={handleCloseClick}>\r\n                            Anuluj\r\n                        </button>\r\n                        <button className='event-adder__button--accept' onClick={handleAcceptClick}>\r\n                            Utwórz wydarzenie\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </motion.div>\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nexport default AddEventPopup;\r\n","import { useState, useEffect } from 'react';\r\nimport dayjs from 'dayjs';\r\nimport { motion } from 'framer-motion';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { forceEventsRefresh, setAddEventPopup, setDeleteEventPopup, setGroup } from '../../actions';\r\nimport { getGroups, getCourses, getTypes } from '../API/Api';\r\n\r\nconst DeleteEventPopup = () => {\r\n    const chosenEventID = useSelector((state) => state.chosenEvent);\r\n    const dispatch = useDispatch();\r\n\r\n    const [password, setPassword] = useState('');\r\n\r\n    const deleteEvent = async () => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ eventID: chosenEventID, password: password }),\r\n            mode: 'no-cors', // no-cors, cors, *same-origin\r\n        };\r\n        const response = await fetch(`https://aleksanderblaszkiewicz.pl/kiedykolos/delete_event.php`, requestOptions);\r\n        if (response) {\r\n            dispatch(setDeleteEventPopup(false));\r\n            dispatch(forceEventsRefresh());\r\n        }\r\n    };\r\n\r\n    const updatePassword = (e) => {\r\n        setPassword(e.target.value);\r\n    };\r\n\r\n    const closePopup = () => {\r\n        dispatch(setDeleteEventPopup(false));\r\n    };\r\n\r\n    const handleCloseClick = (e) => {\r\n        e.preventDefault();\r\n        closePopup();\r\n    };\r\n\r\n    const handleDeleteClick = (e) => {\r\n        e.preventDefault();\r\n        deleteEvent();\r\n    };\r\n\r\n    return (\r\n        <motion.div\r\n            className='modal'\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n            transition={{ ease: [0.08, 0.75, 0.21, 0.98] }}\r\n        >\r\n            <motion.div\r\n                className='event-adder'\r\n                initial={{ scale: 0.9, opacity: 0 }}\r\n                animate={{ scale: 1, opacity: 1 }}\r\n                exit={{ scale: 0.8, opacity: 0 }}\r\n                transition={{ ease: [0.08, 0.75, 0.21, 0.98] }}\r\n            >\r\n                <h2 className='event-adder__title'>Usuwanie wydarzenia {chosenEventID}</h2>\r\n                <form className='event-adder__form'>\r\n                    <div className='edition__setting submit'>\r\n                        <input\r\n                            type='password'\r\n                            id='password'\r\n                            name='password'\r\n                            placeholder='Hasło'\r\n                            onChange={updatePassword}\r\n                        ></input>\r\n                    </div>\r\n\r\n                    <div className='event-adder__buttons'>\r\n                        <button className='event-adder__button--reject' onClick={handleCloseClick}>\r\n                            Anuluj\r\n                        </button>\r\n                        <button className='event-adder__button--accept' onClick={handleDeleteClick}>\r\n                            Usuń wydarzenie\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </motion.div>\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nexport default DeleteEventPopup;\r\n","import { useState, useEffect } from 'react';\r\nimport dayjs from 'dayjs';\r\nimport { motion } from 'framer-motion';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { forceEventsRefresh, setEditEventPopup } from '../../actions';\r\nimport { getGroups, getCourses, getTypes } from '../API/Api';\r\n\r\nconst EditEventPopup = () => {\r\n    const chosenEvent = useSelector((state) => state.chosenEvent);\r\n    const dispatch = useDispatch();\r\n\r\n    const [courses, setCourses] = useState([]);\r\n    const [groups, setGroups] = useState([]);\r\n    const [types, setTypes] = useState([]);\r\n\r\n    const [event, setEvent] = useState();\r\n\r\n    const [courseID, setCourseID] = useState(0);\r\n    const [groupID, setGroupID] = useState(0);\r\n    const [typeID, setTypeID] = useState(0);\r\n    const [date, setDate] = useState('2020-12-12');\r\n    const [time, setTime] = useState('12:00');\r\n    const [description, setDescription] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    useEffect(async () => {\r\n        await downloadFormData();\r\n        await getEventInfo();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (event != undefined) initializeEventInfo();\r\n    }, [event]);\r\n\r\n    const downloadFormData = async () => {\r\n        const coursesTemp = await getCourses(0);\r\n        setCourses(coursesTemp);\r\n\r\n        const groupsTemp = await getGroups(0);\r\n        setGroups(groupsTemp);\r\n\r\n        const typesTemp = await getTypes(0);\r\n        setTypes(typesTemp);\r\n    };\r\n\r\n    const initializeEventInfo = () => {\r\n        setDescription(event.description);\r\n        setDate(event.date);\r\n        setTime(event.time);\r\n        setGroupID(event.group_id);\r\n        setTypeID(event.type_id);\r\n        setCourseID(event.course_id);\r\n    };\r\n\r\n    const getEventInfo = async () => {\r\n        const response = await fetch(\r\n            `https://aleksanderblaszkiewicz.pl/kiedykolos/get_event_details.php?id=${chosenEvent.id}`\r\n        );\r\n        const data = await response.json();\r\n        setEvent(data[0]);\r\n    };\r\n\r\n    const editEvent = async () => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                eventID: chosenEvent.id,\r\n                courseID: courseID,\r\n                groupID: groupID,\r\n                time: time,\r\n                date: date,\r\n                description: description,\r\n                typeID: typeID,\r\n                password: password,\r\n            }),\r\n            mode: 'no-cors', // no-cors, cors, *same-origin\r\n        };\r\n        const response = await fetch(`https://aleksanderblaszkiewicz.pl/kiedykolos/edit_event.php`, requestOptions);\r\n        if (response) {\r\n            dispatch(setEditEventPopup(false));\r\n            dispatch(forceEventsRefresh());\r\n        }\r\n    };\r\n\r\n    const closePopup = () => {\r\n        dispatch(setEditEventPopup(false));\r\n    };\r\n\r\n    const updateCourseID = (e) => {\r\n        setCourseID(e.target.value);\r\n    };\r\n\r\n    const updateGroupID = (e) => {\r\n        setGroupID(e.target.value);\r\n    };\r\n\r\n    const updateTime = (e) => {\r\n        setTime(e.target.value);\r\n    };\r\n\r\n    const updateDescription = (e) => {\r\n        setDescription(e.target.value);\r\n    };\r\n\r\n    const updateTypeID = (e) => {\r\n        setTypeID(e.target.value);\r\n    };\r\n\r\n    const updatePassword = (e) => {\r\n        setPassword(e.target.value);\r\n    };\r\n\r\n    const handleAcceptClick = (e) => {\r\n        e.preventDefault();\r\n        editEvent();\r\n    };\r\n\r\n    const handleCloseClick = (e) => {\r\n        e.preventDefault();\r\n        closePopup();\r\n    };\r\n\r\n    return (\r\n        <motion.div\r\n            className='modal'\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n            transition={{ ease: [0.08, 0.75, 0.21, 0.98] }}\r\n        >\r\n            <motion.div\r\n                className='event-adder'\r\n                initial={{ scale: 0.9, opacity: 0 }}\r\n                animate={{ scale: 1, opacity: 1 }}\r\n                exit={{ scale: 0.8, opacity: 0 }}\r\n                transition={{ ease: [0.08, 0.75, 0.21, 0.98] }}\r\n            >\r\n                <h2 className='event-adder__title'>Edytowanie wydarzenia {dayjs(date).format('DD/MM/YYYY')}</h2>\r\n                <form className='event-adder__form'>\r\n                    <label className='event-adder__label' htmlFor='subject'>\r\n                        Przedmiot\r\n                    </label>\r\n                    <select className='event-adder__input' id='subject' value={courseID} onChange={updateCourseID}>\r\n                        {courses.map((course) => (\r\n                            <option key={course.id} value={course.id}>\r\n                                {course.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <label className='event-adder__label' htmlFor='group'>\r\n                        Grupa\r\n                    </label>\r\n                    <select className='event-adder__input' id='group' value={groupID} onChange={updateGroupID}>\r\n                        {groups.map((group) => (\r\n                            <option key={group.id} value={group.id}>\r\n                                {group.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <label className='event-adder__label' htmlFor='type'>\r\n                        Typ\r\n                    </label>\r\n                    <select className='event-adder__input' id='type' value={typeID} onChange={updateTypeID}>\r\n                        {types.map((type) => (\r\n                            <option key={type.id} value={type.id}>\r\n                                {type.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <div className='edition__setting'>\r\n                        <label className='edition__label' htmlFor='time'>\r\n                            Godzina\r\n                        </label>\r\n                        <input\r\n                            type='time'\r\n                            id='time'\r\n                            name='time'\r\n                            min='07:00'\r\n                            value='16:00:00'\r\n                            max='21:00'\r\n                            value={time}\r\n                            onChange={updateTime}\r\n                        ></input>\r\n                    </div>\r\n\r\n                    <div className='edition__setting'>\r\n                        <label className='edition__label' htmlFor='description'>\r\n                            Opis\r\n                        </label>\r\n                        <textarea\r\n                            id='description'\r\n                            name='description'\r\n                            rows='5'\r\n                            cols='30'\r\n                            placeholder='Tu wpisz opis...'\r\n                            value={description}\r\n                            onChange={updateDescription}\r\n                        ></textarea>\r\n                    </div>\r\n\r\n                    <div className='edition__setting submit'>\r\n                        <input\r\n                            type='password'\r\n                            id='password'\r\n                            name='password'\r\n                            placeholder='Hasło'\r\n                            onChange={updatePassword}\r\n                        ></input>\r\n                    </div>\r\n\r\n                    <div className='event-adder__buttons'>\r\n                        <button className='event-adder__button--reject' onClick={handleCloseClick}>\r\n                            Anuluj\r\n                        </button>\r\n                        <button className='event-adder__button--accept' onClick={handleAcceptClick}>\r\n                            Edytuj wydarzenie\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </motion.div>\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nexport default EditEventPopup;\r\n","import React from 'react';\r\nimport Calendar from './Calendar/Calendar';\r\nimport InfoPanel from './RightPanel/InfoPanel';\r\nimport { useSelector } from 'react-redux';\r\nimport AddEventPopup from './Popups/AddEventPopup';\r\nimport { AnimatePresence } from 'framer-motion';\r\nimport DeleteEventPopup from './Popups/DeleteEventPopup';\r\nimport EditEventPopup from './Popups/EditEventPopup';\r\n\r\nconst UserPanel = () => {\r\n    const addEventPopupEnabled = useSelector((state) => state.addEventPopup);\r\n    const deleteEventPopupEnabled = useSelector((state) => state.deleteEventPopup);\r\n    const editEventPopupEnabled = useSelector((state) => state.editEventPopup);\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='app'>\r\n                <Calendar />\r\n                <InfoPanel />\r\n            </div>\r\n            <AnimatePresence>{addEventPopupEnabled && <AddEventPopup />}</AnimatePresence>\r\n            <AnimatePresence>{deleteEventPopupEnabled && <DeleteEventPopup />}</AnimatePresence>\r\n            <AnimatePresence>{editEventPopupEnabled && <EditEventPopup />}</AnimatePresence>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserPanel;\r\n","import './App.css';\r\nimport UserPanel from './components/UserPanel';\r\n\r\nimport { Route, Switch } from 'react-router';\r\n\r\nconst App = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path='/' exact component={UserPanel} />\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const dateReducer = (state = \"2020-11-01\", action) => {\r\n    switch(action.type) {\r\n        case 'SET_DATE':\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default dateReducer;","const groupReducer = (state = \"Grupa 1\", action) => {\r\n    switch(action.type) {\r\n        case 'SET_GROUP':\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default groupReducer;","const addEventPopupReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case 'SET_ADD_EVENT_POPUP':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default addEventPopupReducer;\r\n","const forceEventsRefreshReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case 'REFRESH':\r\n            return !state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default forceEventsRefreshReducer;\r\n","const deleteEventPopupReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case 'SET_DELETE_EVENT_POPUP':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default deleteEventPopupReducer;\r\n","const chosenEventReducer = (state = 0, action) => {\r\n    switch (action.type) {\r\n        case 'SET_CHOSEN_EVENT':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default chosenEventReducer;\r\n","const chosenThemeReducer = (state = 'dark', action) => {\r\n    switch (action.type) {\r\n        case 'SET_CHOSEN_THEME':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default chosenThemeReducer;\r\n","const editEventPopupReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case 'SET_EDIT_EVENT_POPUP':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default editEventPopupReducer;\r\n","import dateReducer from './chosenDate';\r\nimport groupReducer from './chosenGroup';\r\nimport { combineReducers } from 'redux';\r\nimport addEventPopupReducer from './addEventPopup';\r\nimport forceEventsRefreshReducer from './forceEventsRefresh';\r\nimport deleteEventPopupReducer from './deleteEventPopup';\r\nimport chosenEventReducer from './chosenEvent';\r\nimport chosenThemeReducer from './chosenTheme';\r\nimport editEventPopupReducer from './editEventPopup';\r\n\r\nconst allReducers = combineReducers({\r\n    chosenDate: dateReducer,\r\n    chosenGroup: groupReducer,\r\n    addEventPopup: addEventPopupReducer,\r\n    deleteEventPopup: deleteEventPopupReducer,\r\n    editEventPopup: editEventPopupReducer,\r\n    forceEventsRefresh: forceEventsRefreshReducer,\r\n    chosenEvent: chosenEventReducer,\r\n    chosenTheme: chosenThemeReducer,\r\n});\r\n\r\nexport default allReducers;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { createStore } from 'redux';\r\nimport allReducer from './reducers';\r\nimport { Provider } from 'react-redux';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { loadState, saveState } from './storage/localStorage';\r\n\r\nconst persistedStore = loadState();\r\nconst store = createStore(\r\n    allReducer,\r\n    persistedStore,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nstore.subscribe(() => {\r\n    saveState({\r\n        chosenGroup: store.getState().chosenGroup,\r\n        chosenTheme: store.getState().chosenTheme,\r\n    });\r\n});\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <HashRouter basename='/'>\r\n                <App />\r\n            </HashRouter>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n","export const loadState = () => {\r\n    try {\r\n        const serializedState = localStorage.getItem('state');\r\n        if (serializedState === null) return undefined;\r\n        return JSON.parse(serializedState);\r\n    } catch (err) {\r\n        return undefined;\r\n    }\r\n};\r\n\r\nexport const saveState = (state) => {\r\n    try {\r\n        localStorage.setItem('state', JSON.stringify(state));\r\n    } catch {}\r\n};\r\n"],"sourceRoot":""}