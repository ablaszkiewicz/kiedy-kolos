{"version":3,"sources":["actions/index.js","components/CallendarCard.js","components/Callendar.js","components/InfoPanel.js","App.js","reportWebVitals.js","reducers/chosenDate.js","reducers/index.js","index.js"],"names":["setDate","value","type","payload","CallendarCard","day","month","year","events","dispatch","useSelector","state","chosenDate","useDispatch","className","tabindex","onClick","console","log","class","map","event","short_name","toUpperCase","id","Callendar","useState","setEvents","days","setDays","useEffect","initializeDays","getEvents","a","fetch","response","json","data","Array","i","getEventsForDay","specificEvents","forEach","date","slice","length","push","rows","reduce","r","element","index","rowContent","InfoEvent","setChosenEvent","name","EventDescription","InfoPanel","API_URL","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","dateReducer","action","allReducers","combineReducers","store","createStore","allReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2e59585.chunk.js","sourcesContent":["export const setDate = (value) => {\r\n    return {\r\n        type: 'SET',\r\n        payload: value\r\n    };\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setDate } from \"./../actions\";\r\nimport './../App.css';\r\n\r\nconst CallendarCard = ({day, month, year, events}) => {\r\n    const chosenDate = useSelector(state => state.chosenDate);\r\n    const dispatch = useDispatch();\r\n\r\n    const callendarCardClicked = () => {\r\n        console.log(\"Clicked on day: \" + day);\r\n        dispatch(setDate(`${year}-${month}-${day}`));\r\n    }\r\n\r\n    return(\r\n        <div className=\"calendar__day\" tabindex=\"0\" onClick={callendarCardClicked}>\r\n            <div className=\"events\">\r\n                <ul class=\"events__list\">\r\n                    {events.map(event => (\r\n                        <li className=\"events__item events__item--exam\" key={event.id}>\r\n                            {event.short_name.toUpperCase()}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <div class=\"day__number\">{day}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CallendarCard;","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport CallendarCard from \"./CallendarCard\";\r\nimport AddEventPanel from \"./AddEventPanel\";\r\nimport \"./../App.css\"\r\nimport { setDate } from \"../actions\";\r\n\r\nconst Callendar = () => {\r\n    const API_URL = `https://aleksanderblaszkiewicz.pl/kiedykolos/get_events.php`;\r\n    const [events, setEvents] = useState([]);\r\n    const [days, setDays] = useState([]);\r\n    const [month, setMonth] = useState(12);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        initializeDays();\r\n        getEvents();\r\n        dispatch(setDate(\"2020-12-01\"));\r\n    }, []);\r\n\r\n    const getEvents = async () => {\r\n        const response = await fetch(API_URL);\r\n        const data = await response.json();\r\n        setEvents(data);\r\n        console.log(data);\r\n    }\r\n\r\n    const initializeDays = () => {\r\n        let days = new Array(42);\r\n        for(let i=0; i<42; i++) {\r\n            days[i] = i+1;\r\n        }\r\n        setDays(days);\r\n    }\r\n\r\n    const getEventsForDay = (day) => {\r\n        let specificEvents = [];\r\n        events.forEach(event => {\r\n            if(event.date.slice(event.date.length-2,event.date.length) == day) {\r\n                specificEvents.push(event);\r\n            }\r\n        });\r\n        return specificEvents;\r\n    }\r\n\r\n    var groupSize = 7;\r\n    var rows = days.map(function(day) {\r\n        // map content to html elements\r\n        return <CallendarCard key={day} day={day} month={month} year=\"2020\" events={getEventsForDay(day)}/>;\r\n    }).reduce(function(r, element, index) {\r\n        // create element groups with size 3, result looks like:\r\n        // [[elem1, elem2, elem3], [elem4, elem5, elem6], ...]\r\n        index % groupSize === 0 && r.push([]);\r\n        r[r.length - 1].push(element);\r\n        return r;\r\n    }, []).map(function(rowContent) {\r\n        // surround every group with 'row'\r\n        return <div className=\"calendar__row\">{rowContent}</div>;\r\n    });\r\n\r\n    return (\r\n        <div className=\"app__calendar\">\r\n            {/* <AddEventPanel refreshEvents={getEvents}/> */}\r\n            <div className=\"calendar__month\">\r\n                <button className=\"month__button\">&lt;</button>\r\n                <h2 className=\"month__title\">Listopad</h2>\r\n                <button className=\"month__button\">&gt;</button>\r\n            </div>\r\n            <div className=\"calendar__names\">\r\n                <ul>\r\n                <li>poniedziałek</li>\r\n                <li>wtorek</li>\r\n                <li>środa</li>\r\n                <li>czwartek</li>\r\n                <li>piątek</li>\r\n                <li>sobota</li>\r\n                <li>niedziela</li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"calendar__days\">\r\n                    {rows}\r\n                    {/* {days.map(day => (\r\n                        <CallendarCard key={day} day={day} month={month} year=\"2020\" events={getEventsForDay(day)}/>\r\n                    ))} */}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Callendar;","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport './../App.css';\r\n\r\n\r\n\r\nconst InfoPanel = () => {\r\n    const [events, setEvents] = useState([]);\r\n    const [chosenEvent, setChosenEvent] = useState();\r\n    const date = useSelector(state => state.chosenDate);\r\n    const API_URL = `https://aleksanderblaszkiewicz.pl/kiedykolos/get_events_for_day.php?date=${date}`;\r\n\r\n    useEffect(() => {\r\n        getEvents();\r\n    }, [date]);\r\n\r\n    const getEvents = async () => {\r\n        const response = await fetch(API_URL);\r\n        const data = await response.json();\r\n        setEvents(data);\r\n        setChosenEvent(data[0]);\r\n    }\r\n\r\n    return(\r\n        <div className=\"app__extension\">\r\n            <div className=\"app__events\">\r\n                <h2 class=\"events__header\">Wydarzenia {date}</h2>\r\n                <ul class=\"events-list\">\r\n                    {events.map((event) => (\r\n                        <InfoEvent key={event.id} event={event} setChosenEvent={setChosenEvent}/>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <EventDescription />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst InfoEvent = ({event, setChosenEvent}) => {\r\n    return (\r\n        <div className=\"events-list__item\" onClick={() => setChosenEvent(event)}>\r\n            <h3>{event.name}</h3>\r\n            <div class=\"events-list__info\">\r\n                  <div class=\"events-list__time\">11:30 - 12:45</div>\r\n                  <div class=\"events-list__category\">Projekt</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst EventDescription = () => {\r\n    return (\r\n        <div class=\"app__info\">\r\n            <h3>Języki Programowania</h3>\r\n            <ul class=\"app__links\">\r\n              <a><li class=\"app__link\">eNauczanie</li></a>\r\n              <a><li class=\"app__link\">Prezentacja</li></a>\r\n              <a><li class=\"app__link\">Dysk Google</li></a>\r\n            </ul>\r\n            <div class=\"app__info-text\">\r\n              Wszystkie najważniejsze informacje zostały wrzucone na Dysk\r\n              Google. Na eNauczaniu znajdują się warunki zaliczenia. Wymagane\r\n              jest 51 punktów z całego przedmiotu, z czego te kolokwium jest\r\n              warte 20, następne 20 oraz 4 projekty oceniane na 15 punktów\r\n              każdy. Kolega z roku wyżej podesłał nam też prezentacje swojego\r\n              autorstwa, warto się z nią zapoznać. Prawdopodobnie odbędzie się\r\n              zdalnie, ale warto być gotowym na wszystko. Wszystkie\r\n              najważniejsze informacje zostały wrzucone na Dysk Google. Na\r\n              eNauczaniu znajdują się warunki zaliczenia. Wymagane jest 51\r\n              punktów z całego przedmiotu, z czego te kolokwium jest warte 20,\r\n              następne 20 oraz 4 projekty oceniane na 15 punktów każdy. Kolega z\r\n              roku wyżej podesłał nam też prezentacje swojego autorstwa, warto\r\n              się z nią zapoznać. Prawdopodobnie odbędzie się zdalnie, ale warto\r\n              być gotowym na wszystko. Wszystkie najważniejsze informacje\r\n              zostały wrzucone na Dysk Google. Na eNauczaniu znajdują się\r\n              warunki zaliczenia. Wymagane jest 51 punktów z całego przedmiotu,\r\n              z czego te kolokwium jest warte 20, następne 20 oraz 4 projekty\r\n              oceniane na 15 punktów każdy. Kolega z roku wyżej podesłał nam też\r\n              prezentacje swojego autorstwa, warto się z nią zapoznać.\r\n              Prawdopodobnie odbędzie się zdalnie, ale warto być gotowym na\r\n              wszystko. Wszystkie najważniejsze informacje zostały wrzucone na\r\n              Dysk Google. Na eNauczaniu znajdują się warunki zaliczenia.\r\n              Wymagane jest 51 punktów z całego przedmiotu, z czego te kolokwium\r\n              jest warte 20, następne 20 oraz 4 projekty oceniane na 15 punktów\r\n              każdy. Kolega z roku wyżej podesłał nam też prezentacje swojego\r\n              autorstwa, warto się z nią zapoznać. Prawdopodobnie odbędzie się\r\n              zdalnie, ale warto być gotowym na wszystko.\r\n            </div>\r\n          </div>\r\n    )\r\n}\r\n\r\nexport default InfoPanel;","import React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport Callendar from \"./components/Callendar\";\nimport InfoPanel from \"./components/InfoPanel\"\n\nconst App = () => {\n    return  (\n        <div class=\"container\">\n            <div class=\"app\">\n                <Callendar />\n                <InfoPanel />\n            </div>\n        </div>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const dateReducer = (state = \"2020-11-01\", action) => {\r\n    switch(action.type) {\r\n        case 'SET':\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default dateReducer;","import dateReducer from './chosenDate';\r\nimport {combineReducers} from 'redux';\r\n\r\nconst allReducers = combineReducers({\r\n    chosenDate: dateReducer\r\n});\r\n\r\nexport default allReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport allReducer from './reducers';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(\n    allReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}